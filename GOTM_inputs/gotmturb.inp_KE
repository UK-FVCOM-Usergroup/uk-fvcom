!$Id: gotmturb.proto,v 1.1.1.1 2003/03/11 13:38:58 kbk Exp $
!-------------------------------------------------------------------------------
! The namelists 'turbulence',.....
! They have to come in this order.
!-------------------------------------------------------------------------------

!-------------------------------------------------------------------------------
! What type of equations are solved in the turbulence model?
!
! turb_method=  0: Convective Adjustment
!               1: Analytical eddy visc. and diff. profiles, not coded yet
!               2: Turbulence Model calculating TKE, length scale, stab. func.
! tke_method=   How to calculate TKE.
!               1= Algebraic equation.
!               2= Dynamic equation for k-epsilon and generic model.
!               3= Dynamic equation for Mellor-Yamada model.
! len_scale_method=  How to calculate the lenght scale.
!               1= Parabolic shape
!               2= Triangle shape
!               3= Xing and Davies [1995]
!               4= Robert and Ouellet [1987]
!               5= Blackadar (two boundaries) [1962]
!               6= Bougeault and Andre [1986]
!               7= Eifler and Schrimpf (ISPRAMIX) [1992]
!               8= Dynamic dissipation rate equation
!               9= Dynamic Mellor-Yamada q^2l-equation
!              10= Generic length scale equation
!
! stab_method=  How to calculate stability functions.
!       1, Mellor and Yamada [1982],        full version
!       2, Kantha and Clayson [1994],       full version   
!       3, Burchard and Baumert [1995],     full version
!       4, Canuto et al. [2000] version A,  full version
!       5, Canuto et al. [2000] version B,  full version
!       6, Galperin et al. [1988],          quasi-eq. version
!       7, Kantha and Clayson [1994],       quasi-eq. version
!       8, Burchard and Baumert [1995],     quasi-eq. version
!       9, Canuto et al. [2000] version A,  quasi-eq. version
!       10, Canuto et al. [2000] version B, quasi-eq. version
!       11, Constant stability functions   
!       12, Munk and Anderson [1954]       
!       13, Schumann and Gerz [1995]       
!       14, Eifler and Schrimpf [1992]     
!
!-------------------------------------------------------------------------------
 &turbulence
  turb_method=          2,
  tke_method=           2,
  len_scale_method=     8,
  stab_method=          4,
 /

!-------------------------------------------------------------------------------
! What boundary conditions are used?
!
! k_ubc, k_lbc:         upper and lower boundary conditions
!                       for the k-equation
!
! psi_ubc, psi_lbc:     upper and lower boundary conditions
!                       for the length-scale equation (e.g.
!                       epsilon, kl, omega, generic)
!  
! In each case:         prescribed boundary condition,
!                       Dirichlet-type                    :  0
!                       flux boundary condition,
!                       Neumann-type                      :  1
!
! ubc_type, lbc_type:   boundary layer type
!  
! In each case:         viscous sublayer (not yet impl.)  :  0
!                       log-law                           :  1
!                       tke-injection (breaking waves)    :  2 
!                       (this of course only for ubc_type)
! 
!-------------------------------------------------------------------------------
 &bc
  k_ubc=                1,
  k_lbc=                1,
  psi_ubc=              1,
  psi_lbc=              1,
  ubc_type=             1,
  lbc_type=             1,
 /

!-------------------------------------------------------------------------------
! What turbulence parameters have been described?
!
! cm0_fix=      value of cm0, if stab_method=11-14
! Prandtl0_fix= value of the turbulent Prandtl-number, if stab_method=11-14
! cw=           constant of the wave-breaking model, 
!               Craig & Banner (1994) use cw=100
! compute_kappa compute kappa from model parameters
! kappa         the desired von Karman constant (if compute_kappa=.true.)
! compute_c3    compute c3 (E3 for Mellor-Yamada) for given Ri_st
! Ri_st         the desired steady-state Richardson number (if compute_c3=.true.)
! length_lim=   apply length scale limitation (see Galperin et al. 1988)
! galp=         coef. for length scale limitation 
! const_num     minimum eddy diffusivity (only with turb_method=0)
! const_nuh     minimum heat diffusivity (only with turb_method=0)
! k_min=        minimun TKE 
! eps_min=      minimum dissipation
!
!-------------------------------------------------------------------------------
 &turb_param
  cm0_fix=              0.5477,
  Prandtl0_fix=         0.74,
  cw=                   100.,
  compute_kappa=        .false.,
  kappa=                0.4,
  compute_c3=           .true.,
  ri_st=                0.25,
  length_lim=           .false.,
  galp=                 0.53,
  const_num=            5.e-4,
  const_nuh=            5.e-4,
  k_min=                1.e-10,
  eps_min=              1.e-14,
 /

!-------------------------------------------------------------------------------
! The generic model (Umlauf & Burchard, J. Mar. Res., 2003)
!
! This part is active only, when len_scale_method=10 has been set.
!
! compute_param=             compute the model parameters: 
!                            if this is .false., you have to set all 
!                            model parameters (m,n,cpsi1,...) explicitly
!                            if this is .true., all model parameters 
!                            set by you (except m) will be ignored and 
!                            re-computed from kappa, d, alpha, etc.
!                            (see Umlauf&Burchard 2002) 
!
!  m=                        exponent for k
!  n=                        exponent for l
!  p=                        exponent for cm0
!
!  Examples: 
!
!  k-epsilon (Rodi 1987)          :       m=3/2, n=-1, p=3
!  k-omega (Umlauf et al. 2003)   :       m=1/2, n=-1, p=-1
!  (see Umlauf & Burchard 2003)
!
! cpsi1=          emp. coef. in psi equation
! cpsi2=          emp. coef. in psi equation
! cpsi3minus=     cpsi3 for stable stratification
! cpsi3plus=      cpsi3 for unstable stratification
! sig_kpsi=       Schmidt number for TKE diffusivity
! sig_psi=        Schmidt number for psi diffusivity  
!
!-------------------------------------------------------------------------------
 &generic
  compute_param=             .false.,
  gen_m=                     1.5,
  gen_n=                     -1.0,
  gen_p=                     3.0,
  cpsi1=                     1.44,
  cpsi2=                     1.92,
  cpsi3minus=                0.0,
  cpsi3plus =                0.0,
  sig_kpsi=                  1.0,
  sig_psi=                   1.3,
  gen_d=                     -1.087,
  gen_alpha=                 -4.97,
  gen_l=                     0.09,
 /

!-------------------------------------------------------------------------------
! The k-epsilon model (Rodi 1987)
!
! this part is active only, when len_scale_method=8 has been set! 
! 
! Empirical parameters used in the k-epsilon model.
!
! ce1=          emp. coef. in diss. eq.
! ce2=          emp. coef. in diss. eq.
! ce3minus=     ce3 for stable stratification, overwritten if compute_c3=.true.
! ce3plus=      ce3 for unstable stratification (Rodi 1987: ce3plus=1.0)
! sig_k=        Schmidt number for TKE diffusivity
! sig_e=        Schmidt number for diss. diffusivity
! sig_peps = .true.: The wave breaking parameterisation suggested
!                    by Burchard (JPO 31, 2001, 3133-3145) will be used. 
!-------------------------------------------------------------------------------
 &keps
  ce1=          1.44,
  ce2=          1.92,
  ce3minus=     0,
  ce3plus=      0,
  sig_k=        1.,
  sig_e=        1.3,
  sig_peps=     .false.,
 /

!-------------------------------------------------------------------------------
! The Mellor-Yamada model (Mellor & Yamada 1982)
!
! this part is active only, when len_scale_method=9 has been set! 
! 
! Empirical parameters used in the Mellor-Yamada model.
!
! e1=           coef. in MY q**2 l equation
! e2=           coef. in MY q**2 l equation
! e3=           coef. in MY q**2 l equation, overwritten if compute_c3=.true.
! sq=           turbulent diffusivities of q**2 (= 2k)
! sl=           turbulent diffusivities of q**2 l
! my_length=    prescribed barotropic lengthscale in q**2 l equation of MY
!               1=parabolic
!               2=triangular
!               3=lin. from surface
! new_constr=   .true.: stabilisation of Mellor-Yamada stability functions
!                       according to Burchard & Deleersnijder [2001]
!-------------------------------------------------------------------------------
 &my
  e1=           1.8,
  e2=           1.33,
  e3=           1.8,
  sq=           0.2,
  sl=           0.2,
  my_length=    3,
  new_constr=   .false.,
 /

!-------------------------------------------------------------------------------
! The internal wave model
!
! iw_model=     IW specification
!               0=no IW, 2=Large et al. 1994
! alpha=        coeff. for Mellor IWmodel (0: no IW, 0.7 Mellor 1989)
!
! The following six empirical parameters are used for the
! Large et al. 1994 shear instability and internal wave breaking
! parameterisations (iw_model = 2, all viscosities are in m**2/s):
!
! klimiw=       critcal value of TKE
! rich_cr=      critical Richardson number for shear instability
! numshear=     background diffusivity for shear instability
! numiw=        background viscosity for internal wave breaking
! nuhiw=        background diffusivity for internal wave breaking
!-------------------------------------------------------------------------------
 &iw
  iw_model=     0,
  alpha=        0.0,
  klimiw=       1e-6,
  rich_cr=      0.7,
  numshear=     5.e-3,
  numiw=        1.e-4,
  nuhiw=        1.e-5,
 /
