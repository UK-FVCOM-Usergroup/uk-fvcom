MODULE MOD_ONEDTIDE
#  if defined (ONE_D_MODEL)
   USE MOD_TYPES
   IMPLICIT NONE
   REAL(SP),ALLOCATABLE :: UMAX(:),PMAX(:)
   SAVE
   
   CONTAINS

   SUBROUTINE GET_UMAX
   USE ALL_VARS
   USE MOD_INP
   IMPLICIT NONE
   REAL(SP) REALVEC(150)
   INTEGER  ISCAN,KTEMP
   CHARACTER(LEN=120) :: FNAME
   
   FNAME = "./"//trim(casename)//"_run.dat"
   
   ISCAN = SCAN_FILE(FNAME,"UMAX",FVEC = REALVEC,NSZE = KTEMP)
   IF(ISCAN /= 0)THEN
     WRITE(IPT,*) 'ERROR READING UMAX: ',ISCAN
     CALL PSTOP
   END IF
   IF(MSR)THEN 
     IF(KTEMP /= 6)THEN
       WRITE(*,*)'NUMBER OF TIDAL CONSTITUTES IS NOT EQUAL TO 6'
       WRITE(*,*)'NUMBER OF TIDAL CONSTITUTES IS EQUAL',REALVEC
       CALL PSTOP
     END IF
   END IF
   
   ALLOCATE(UMAX(6))
   UMAX = REALVEC
   
   
   ISCAN = SCAN_FILE(FNAME,"PMAX",FVEC = REALVEC,NSZE = KTEMP)
   IF(ISCAN /= 0)THEN
     WRITE(IPT,*) 'ERROR READING PMAX: ',ISCAN
     CALL PSTOP
   END IF
   IF(MSR)THEN 
     IF(KTEMP /= 6)THEN
       WRITE(*,*)'NUMBER OF TIDAL CONSTITUTES IS NOT EQUAL TO 6'
       WRITE(*,*)'NUMBER OF TIDAL CONSTITUTES IS EQUAL',REALVEC
       CALL PSTOP
     END IF
   END IF
   
   ALLOCATE(PMAX(6))
   PMAX = REALVEC
   
   RETURN
   END SUBROUTINE GET_UMAX
        
   SUBROUTINE ONEDTIDE(PSTX_TM,PSTY_TM)
   USE ALL_VARS
   IMPLICIT NONE
   INTEGER :: I,J,K
   REAL(SP) :: PSTX_TM(0:NT,KB),PSTY_TM(0:NT,KB),TIME1

!**************     EXECUTABLE     ***************
   TIME1 = TIME * 86400.0_SP
   
   PSTX_TM = 0.0_SP
   PSTY_TM = 0.0_SP
!***************  INITIALIZATION   ***************
   IF (IINT == 1) THEN
     DO K=1,KBM1
       DO I=1,NT
         DO J=1,6
           PSTX_TM(I,K) = PSTX_TM(I,K)+UMAX(J)/SQRT(2._SP)/DTI
         END DO
       END DO
     END DO
   END IF 

!***************  COMPUTATION   ***************
   DO K=1,KBM1
     DO I=1,NT
       DO J=1,6
         PSTX_TM(I,K) = PSTX_TM(I,K)-UMAX(J)*PI2/(PERIOD(J)*SQRT(2.0_SP))*  &
	                SIN(PI2/PERIOD(J)*TIME1-PMAX(J))
       END DO
       PSTX_TM(I,K) = PSTX_TM(I,K)*DT1(I)
       PSTY_TM(I,K) = PSTX_TM(I,K)
     END DO
   END DO
			
   RETURN
   END SUBROUTINE ONEDTIDE

#  endif
END MODULE MOD_ONEDTIDE   
   
    
