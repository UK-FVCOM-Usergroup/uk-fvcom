      SUBROUTINE RCA04
! 
!        RCA04 READS THE BOUNDARY CONCENTRATIONS 
! 
      USE ALL_VARS, ONLY : MSR,ZZ,SERIAL,PAR,M,MYID,NPROCS,MT,HG
      USE MOD_RCA
# if defined (MULTIPROCESSOR) 
      USE MOD_PAR
# endif           
      IMPLICIT NONE
      SAVE
!      INCLUDE  'RCACM'
      REAL  SLBC(NSL),SIGDEPTH(NXY,NZ),SIGBC(NZ)
      CHARACTER(LEN=80) :: COMMENT
      INTEGER :: IUNITCHECK,I,J,NLVLS,JBC,IFROM,ITO
      REAL,ALLOCATABLE :: FSM_TMP(:)
      INTEGER :: I1,NCNT,IERR
      REAL,ALLOCATABLE :: TEMP1(:),TEMP2(:),TEMP3(:)
      REAL,ALLOCATABLE :: ZZ_TMP(:,:),HBAR_TMP(:)
     ! REAL,ALLOCATABLE :: IBCS_GL(:)

      ALLOCATE(FSM_TMP(NXY))   ;FSM_TMP = 1

      IF(MSR) WRITE(OUT,'(////1X,119("*")///)')
      TWARPBC='SECS'

      READ(IN,'(A)')   COMMENT
      READ(IN,'(A40,I10)')  BCFILNA,IBNRYRDOPTS(1)
      IF(BCFILNA == 'NULL' .OR. BCFILNA == 'null' .OR. BCFILNA == 'Null') THEN
        BCFILNA='NULL'
        IF(MSR) WRITE(OUT,'(10X,"USER DID NOT SPECIFY A BOUNDARY CONDITION FILE TO BE READ")')
        DO ISYS=1,NOSYS 
          NOBC(ISYS)=0
        ENDDO
        GO TO 930
      ENDIF
      IF(MSR) WRITE(OUT,'(10X,"OPENING BCFILNA = ",A40)')  BCFILNA
      IF(IBNRYRDOPTS(1) == 0) THEN
        OPEN(32,FILE=BCFILNA,FORM='FORMATTED')
      ELSE
        OPEN(32,FILE=BCFILNA,FORM='UNFORMATTED')
      ENDIF

      IF(IBNRYRDOPTS(1) == 0) THEN
        READ(32,'(A)')  COMMENT
        READ(32,'(3I10)',ERR=950) IBCOPT,IBCPWLOPT
      ELSE
        READ(32) IBCOPT,IBCPWLOPT
      ENDIF
      IF(MSR)THEN
       WRITE(OUT,'(//42X,"BOUNDARY CONDITION OPTIONS SELECTED")')
       IF(IBCOPT == 1 .OR. IBCOPT == 2)     &
         WRITE(OUT,'(36X,"BOUNDARY CONCENTRATIONS INPUT USING SIGMA-LEVELS")')
       IF(IBCOPT == 3 .OR. IBCOPT == 4)     &
         WRITE(OUT,'(34X,"BOUNDARY CONCENTRATIONS INPUT USING STANDARD LEVELS")')
       IF(IBCPWLOPT == 0) WRITE(OUT,'(45X,"STEP FUNCTION OPTION SELECTED")')
       IF(IBCPWLOPT == 1) WRITE(OUT,'(43X,"PIECEWISE LINEAR OPTION SELECTED")')
      END IF 

      IF(IBCOPT == 2 .OR. IBCOPT == 4) THEN
       IF(IBNRYRDOPTS(1) == 0) THEN
        READ(32,'(A)')  COMMENT
        READ(32,'(10X,I10,6X,A4)',ERR=950)  NXBCTSECS,TWARPBC
       ELSE
        READ(32)  NXBCTSECS,TWARPBC
       ENDIF
       ISCALBC=IUNITCHECK(TWARPBC,'TWARPBC ')
       NXBCTSECS=ISCALBC*NXBCTSECS
       NXBCT=NXBCTSECS/86400.
       IF(MSR) WRITE(OUT,'(//39X,"BOUNDARY CONDITIONS AT TIME =",F8.2," DAYS")') NXBCT
      ENDIF

      NOBCALL = 0

      DO 500 ISYS=1,NOSYS 

       IF(IBNRYRDOPTS(1) == 0) THEN
        READ(32,'(A)')  COMMENT
        READ(32,'(3I10)',ERR=950) NOBC_GL(ISYS)	
       ELSE
        READ(32) NOBC_GL(ISYS)
       ENDIF

       IF(NOBC_GL(ISYS) == 0) THEN
        IF(MSR) WRITE(OUT,'(///42X,"NO BOUNDARY CONDITIONS FOR SYSTEM",I3)') ISYS 
        IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))') SYNAME(ISYS)
        GO TO 500 
       ENDIF

       IF(NOBC_GL(ISYS) > MXBC) GO TO 960

       IF(MSR)THEN
        WRITE(OUT,'(/41X,"BOUNDARY CONCENTRATIONS FOR SYSTEM",I3)') ISYS
        WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))') SYNAME(ISYS)
        WRITE(OUT,'(48X,"NUMBER OF BC''S READ",I5)') NOBC_GL(ISYS)
       END IF	

       IF(IBNRYRDOPTS(1) == 0) THEN
        READ(32,'(A)')  COMMENT
        READ(32,'(E10.3)',ERR=950)  SCALBC(ISYS)
       ELSE
        READ(32)  SCALBC(ISYS)
       ENDIF
       IF(MSR) WRITE(OUT,'(47X,"SCALE FACTOR",E13.3/)') SCALBC(ISYS)

       if(msr) print*,'IBCOPT= ',IBCOPT,myid
       GO TO (100,200,300,300),IBCOPT

!!!      CONSTANT - SIGMA LEVEL
  100  IF(LIST(2) == 1 .AND. MSR) WRITE(OUT,'(12X,4(8X,"BC  NODE LYR "))') 
       IF(IBNRYRDOPTS(1) == 0) THEN
        READ(32,'(A)')  COMMENT
        READ(32,'(4(F10.0,1X,2I3))',ERR=950) (BBC_GL(I,ISYS),        &
	         (IBC_GL(J,I,ISYS),J=1,2),I=1,NOBC_GL(ISYS)) 
       ELSE
        READ(32)  (BBC_GL(I,ISYS),(IBC_GL(J,I,ISYS),J=1,2),I=1,NOBC_GL(ISYS)) 
       ENDIF
       IF(LIST(2) == 1 .AND. MSR)                                            &
         WRITE(OUT,'(11X,E12.4,2I4,E12.4,2I4,E12.4,2I4,E12.4,2I4)')          &
	      (BBC_GL(I,ISYS),(IBC_GL(J,I,ISYS),J=1,2),I=1,NOBC_GL(ISYS))
 
       DO 115 I=1,NOBC_GL(ISYS)
	 IXY = IBC_GL(1,I,ISYS)
	
!       CHECK IF VALID BOUNDARY SEGMENT NUMBER
!!!!!!JQIJQIJQIJQIJQI
	FSM_TMP(IXY)=-1     !!!!!!!!!!!!!!JQIJQIJQIJQIJQI
!!!!!!JQIJQIJQIJQIJQI
        IF(FSM_TMP(IXY) == -1 .OR. FSM_TMP(IXY) == -2)  GO TO 105
        IF(MSR) WRITE(OUT,1950)  ISYS,I,IXY,IBC_GL(2,I,ISYS)
 1950   FORMAT(//10X,'ERROR IN BOUNDARY INPUT FILE FOR SYSTEM ',I4//       &
         10X,'BOUNDARY NUMBER ',I3,'  IBC(1)=',I3,'  IBC(2)=',I3,          &
         ' IS NOT A VALID BOUNDARY SEGMENT'/10X,'RCA TERMINATED')
!JQI        CALL EXIT
        CALL PSTOP('rca04_133 ')
  105   IF(NOBCALL_GL == 0) THEN
         NOBCALL_GL = 1
         IBCALL_GL(1,1) = IBC_GL(1,I,ISYS)
         IBCALL_GL(2,1) = IBC_GL(2,I,ISYS)
        ELSE
         DO J=1,NOBCALL_GL
          IF(IBC_GL(1,I,ISYS) == IBCALL_GL(1,J) .AND. IBC_GL(2,I,ISYS) == IBCALL_GL(2,J))  GO TO 113
         END DO
         NOBCALL_GL = NOBCALL_GL+1
         IF(NOBCALL_GL > MXBC)  GO TO 960
         IBCALL_GL(1,NOBCALL_GL) = IBC_GL(1,I,ISYS)
         IBCALL_GL(2,NOBCALL_GL) = IBC_GL(2,I,ISYS)
        ENDIF
!     APPLY SCALE FACTOR
  113   BBC_GL(I,ISYS) = SCALBC(ISYS)*BBC_GL(I,ISYS)
  115  CONTINUE

       IF(SERIAL)THEN
         NOBC = NOBC_GL
	 BBC  = BBC_GL
	 IBC  = IBC_GL
	 NOBCALL = NOBCALL_GL
	 IBCALL  = IBCALL_GL
       END IF

# if defined (MULTIPROCESSOR)
       IF(PAR)THEN
	 ALLOCATE(TEMP1(NOBC_GL(ISYS)))   ;TEMP1 = 0
	 ALLOCATE(TEMP2(NOBC_GL(ISYS)))   ;TEMP2 = 0
	 ALLOCATE(TEMP3(NOBC_GL(ISYS)))   ;TEMP3 = 0.0
	 
	 NCNT = 0
	 FSM = 1.0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC_GL(ISYS)
	  I1 = NLID(IBC_GL(1,I,ISYS))
	  IF(I1 /= 0)THEN
	   NCNT = NCNT +1
	   TEMP1(NCNT) = I1
	   TEMP2(NCNT) = IBC_GL(2,I,ISYS)
	   TEMP3(NCNT) = BBC_GL(I,ISYS)
	   FSM(NCNT)   = -1
	  END IF
	 END DO
	 NOBC(ISYS) = NCNT
	 IF(NCNT > 0)THEN
	  IBC(1,1:NCNT,ISYS) = TEMP1(1:NCNT)
	  IBC(2,1:NCNT,ISYS) = TEMP2(1:NCNT)
	  BBC(1:NCNT,ISYS)   = TEMP3(1:NCNT)
	 END IF  
	 DEALLOCATE(TEMP1,TEMP2,TEMP3) 

        ALLOCATE(TEMP1(NOBCALL_GL))    ;TEMP1 = 0
        ALLOCATE(TEMP2(NOBCALL_GL))    ;TEMP2 = 0	
	NCNT = 0
	DO I=1,NOBCALL_GL 
	 I1 = NLID(IBCALL_GL(1,I))
	 IF(I1 /= 0)THEN
	  NCNT = NCNT+1
	  TEMP1(NCNT) = I1
	  TEMP2(NCNT) = IBCALL_GL(2,I)
	 END IF
	END DO
	NOBCALL = NCNT
	IF(NCNT > 0)THEN
	 IBCALL(1,1:NCNT) = TEMP1(1:NCNT)
	 IBCALL(2,1:NCNT) = TEMP2(1:NCNT)
	END IF
	DEALLOCATE(TEMP1,TEMP2)   
       END IF
# endif       

       GO TO 500

!      TIME-VARYING - SIGMA LEVEL
  200  IF(LIST(2) == 1 .AND. MSR) WRITE(OUT,'(//4(6X,"ROW COL LYR",6X,"CONC",3X)/)')

       IF(IBNRYRDOPTS(1) == 0) THEN
        READ(32,'(A)')   COMMENT
        READ(32,'(10X,14I5)',ERR=950)  ((IBC_GL(J,I,ISYS),J=1,2),I=1,NOBC_GL(ISYS))
        READ(32,'(10X,10F10.0)',ERR=950)  (BBC_GL(I,ISYS),I=1,NOBC_GL(ISYS))
       ELSE
        READ(32)  ((IBC_GL(J,I,ISYS),J=1,2),I=1,NOBC_GL(ISYS))
        READ(32)  (BBC_GL(I,ISYS),I=1,NOBC_GL(ISYS))
       ENDIF

       IF(LIST(2) == 1 .AND. MSR) WRITE(OUT,'(4(5X,2I4,E13.3))')    &
              ((IBC_GL(J,I,ISYS),J=1,2),BBC_GL(I,ISYS),I=1,NOBC_GL(ISYS))

       DO 225 I=1,NOBC_GL(ISYS)
        IXY=IBC_GL(1,I,ISYS)
!!!!!!JQIJQIJQIJQIJQI
	FSM_TMP(IXY)=-1     !!!!!!!!!!!!!!JQIJQIJQIJQIJQI
!!!!!!JQIJQIJQIJQIJQI
        IF(FSM_TMP(IXY) == -1 .OR. FSM_TMP(IXY) == -2)  GO TO 215
        IF(MSR) WRITE(OUT,1950)  ISYS,I,IXY,IBC_GL(2,I,ISYS)
!JQI        CALL EXIT
	CALL PSTOP('rca04_232 ')
  215   IF(NOBCALL_GL == 0) THEN
         NOBCALL_GL = 1
         IBCALL_GL(1,1) = IBC_GL(1,I,ISYS)
         IBCALL_GL(2,1) = IBC_GL(2,I,ISYS)
        ELSE
         DO J=1,NOBCALL_GL
          IF(IBC_GL(1,I,ISYS) == IBCALL_GL(1,J) .AND.                        &
                IBC_GL(2,I,ISYS) == IBCALL_GL(2,J))  GO TO 222
         END DO
         NOBCALL_GL = NOBCALL_GL+1
         IBCALL_GL(1,NOBCALL_GL) = IBC_GL(1,I,ISYS)
         IBCALL_GL(2,NOBCALL_GL) = IBC_GL(2,I,ISYS)
        ENDIF
  222   BBC_GL(I,ISYS) = SCALBC(ISYS)*BBC_GL(I,ISYS) 
  225  CONTINUE

       IF(SERIAL)THEN
         NOBC = NOBC_GL
	 BBC  = BBC_GL
	 IBC  = IBC_GL
	 NOBCALL = NOBCALL_GL
	 IBCALL  = IBCALL_GL
       END IF

# if defined (MULTIPROCESSOR)
       IF(PAR)THEN
	 ALLOCATE(TEMP1(NOBC_GL(ISYS)))   ;TEMP1 = 0
	 ALLOCATE(TEMP2(NOBC_GL(ISYS)))   ;TEMP2 = 0
	 ALLOCATE(TEMP3(NOBC_GL(ISYS)))   ;TEMP3 = 0.0
	 
	 NCNT = 0
	 FSM = 1.0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC_GL(ISYS)
	  I1 = NLID(IBC_GL(1,I,ISYS))
	  IF(I1 /= 0)THEN
	   NCNT = NCNT +1
	   TEMP1(NCNT) = I1
	   TEMP2(NCNT) = IBC_GL(2,I,ISYS)
	   TEMP3(NCNT) = BBC_GL(I,ISYS)
	   FSM(NCNT)   = -1
	  END IF
	 END DO
	 NOBC(ISYS) = NCNT
	 IF(NCNT > 0)THEN
	  IBC(1,1:NCNT,ISYS) = TEMP1(1:NCNT)
	  IBC(2,1:NCNT,ISYS) = TEMP2(1:NCNT)
	  BBC(1:NCNT,ISYS)   = TEMP3(1:NCNT)
	 END IF  
	 DEALLOCATE(TEMP1,TEMP2,TEMP3) 

        ALLOCATE(TEMP1(NOBCALL_GL))    ;TEMP1 = 0
        ALLOCATE(TEMP2(NOBCALL_GL))    ;TEMP2 = 0	
	NCNT = 0
	DO I=1,NOBCALL_GL 
	 I1 = NLID(IBCALL_GL(1,I))
	 IF(I1 /= 0)THEN
	  NCNT = NCNT+1
	  TEMP1(NCNT) = I1
	  TEMP2(NCNT) = IBCALL_GL(2,I)
	 END IF
	END DO
	NOBCALL = NCNT
	IF(NCNT > 0)THEN
	 IBCALL(1,1:NCNT) = TEMP1(1:NCNT)
	 IBCALL(2,1:NCNT) = TEMP2(1:NCNT)
	END IF
	DEALLOCATE(TEMP1,TEMP2)   
       END IF
# endif       

       GO TO 500

  300  IF(IBNRYRDOPTS(1) == 0) THEN
!       READ STANDARD LEVEL DEPTHS
        READ(32,'(A)')  COMMENT
        READ(32,'(3I10)',ERR=950)  NLVLS
	if(msr) print*,'COMMENT= ',COMMENT,NLVLS,myid
       ELSE
        READ(32)  NLVLS
       ENDIF
     
!JQI       if(msr) print*,'after read NLVLS',myid   
       IF(NLVLS .GT. NSL) GO TO 970           
       IF(IBNRYRDOPTS(1) == 0) THEN
        READ(32,'(A)')  COMMENT
        READ(32,'(10X,10F10.0)',ERR=950)  (SLDEPTH(I,ISYS),I=1,NLVLS)
       ELSE
        READ(32)  (SLDEPTH(I,ISYS),I=1,NLVLS)
       ENDIF
       IF(LIST(2) == 1 .AND. MSR)   WRITE(OUT,3000)  ISYS,                &
                (I,I=1,10),(SLDEPTH(I,ISYS),I=1,NLVLS)
 3000  FORMAT(42X,'STANDARD LEVEL DEPTHS FOR SYSTEM',I3/                  &
          17X,10(I2,8X)/(11X,10F10.2))
       DO I=1,NLVLS
        SLDEPTH(I,ISYS) = -SLDEPTH(I,ISYS) 
       END DO

       IF(IBCOPT == 4)  GO TO 400

!!!      CONSTANT - STANDARD LEVELS
       IF(LIST(2) == 1 .AND. MSR)  WRITE(OUT,3100)   (I,I=1,10)
 3100  FORMAT(/43X,'CONCENTRATIONS AT STANDARD LEVELS'/2X,'   NODE',8X,10(I2,8X))
 
        ALLOCATE(ZZ_TMP(NXY,NZ))    ;ZZ_TMP = 0.0
        ALLOCATE(HBAR_TMP(NXY))  ;HBAR_TMP = 0.0 
       JBC = 0
       DO 325 I=1,NOBC_GL(ISYS)
        IF(IBNRYRDOPTS(1) == 0) THEN
          READ(32,'(A)')  COMMENT
          READ(32,'(3I10)',ERR=950)  IXY,NOBCSL(I,ISYS)
          READ(32,'(A)')  COMMENT
          READ(32,'(10X,10F10.0)',ERR=950)  (SLBC(J),J=1,NOBCSL(I,ISYS))
	  	  
        ELSE
          READ(32)  IXY,NOBCSL(I,ISYS)
          READ(32)  (SLBC(J),J=1,NOBCSL(I,ISYS))
        ENDIF
        IF(LIST(2) == 1 .AND. MSR)   WRITE(OUT,'(1X,I4,2X,10E10.3)')     &
	   IXY,(SLBC(J),J=1,NOBCSL(I,ISYS))


	IF(SERIAL)THEN
	  ZZ_TMP = ZZ
	  HBAR_TMP = HBAR
	END IF  

# if defined (MULTIPROCESSOR)      
	IF(PAR)CALL GATHER(LBOUND(ZZ,1),UBOUND(ZZ,1),M,NXY,NZ,MYID,NPROCS,NMAP,ZZ,ZZ_TMP)
	IF(PAR)CALL GATHER(LBOUND(HBAR,1),UBOUND(HBAR,1),M,NXY,1,MYID,NPROCS,NMAP,HBAR,HBAR_TMP)
# endif	
        DO IZ=1,NZ
         SIGDEPTH(IXY,IZ) = -ZZ_TMP(IXY,IZ)*HBAR_TMP(IXY)
        END DO

!JQI        CALL SINTER(SLDEPTH(1,ISYS),SLBC,SIGDEPTH,SIGBC,NOBCSL(I,ISYS),NZ)
        CALL SINTER(SLDEPTH(1,ISYS),SLBC,SIGDEPTH(IXY,:),SIGBC,NOBCSL(I,ISYS),NZ)		

        IBCS_GL(I) = IXY
        DO IZ=1,NZ
         JBC = JBC + 1
         IF(JBC > MXBC)  GO TO 960
         IBC_GL(1,JBC,ISYS) = IXY
         IBC_GL(2,JBC,ISYS) = IZ
         BBC_GL(JBC,ISYS) = SIGBC(IZ)
        END DO
  325  CONTINUE
  
        DEALLOCATE(ZZ_TMP,HBAR_TMP)
	
       IF(SERIAL)THEN
         IBC = IBC_GL
	 BBC = BBC_GL
         NOBC(ISYS) = JBC
       END IF
       
# if defined (MULTIPROCESSOR)
       IF(PAR)THEN
	 ALLOCATE(TEMP1(NOBC_GL(ISYS)*NZ))   ;TEMP1 = 0
	 ALLOCATE(TEMP2(NOBC_GL(ISYS)*NZ))   ;TEMP2 = 0
	 ALLOCATE(TEMP3(NOBC_GL(ISYS)*NZ))   ;TEMP3 = 0.0
	 
	 NCNT = 0
	 FSM = 1.0
	 JBC = 0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC_GL(ISYS)/NZ
	  DO IZ = 1,NZ
	   JBC = JBC+1
           IF(JBC > MXBC)  GO TO 960
	   I1 = NLID(IBC_GL(1,JBC,ISYS))
	   IF(I1 /= 0)THEN
	    NCNT = NCNT +1
	    TEMP1(NCNT) = I1
	    TEMP2(NCNT) = IBC_GL(2,JBC,ISYS)
	    TEMP3(NCNT) = BBC_GL(JBC,ISYS)
	    FSM(NCNT)   = -1
	   END IF
	  END DO  
	 END DO
	 NOBC(ISYS) = NCNT
	 IF(NCNT > 0)THEN
	  IBC(1,1:NCNT,ISYS) = TEMP1(1:NCNT)
	  IBC(2,1:NCNT,ISYS) = TEMP2(1:NCNT)
	  BBC(1:NCNT,ISYS)   = TEMP3(1:NCNT)
	 END IF  
	 DEALLOCATE(TEMP1,TEMP2,TEMP3) 

	 FSM = 1.0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC_GL(ISYS)/NZ
	   I1 = NLID(IBCS_GL(I))
	   IF(I1 /= 0)THEN
	    FSM(I1)   = -1
	   END IF
	 END DO  
       END IF 
# endif

       IF(MSR .AND. SERIAL)THEN
        IF(LIST(2) == 1) WRITE(OUT,          &
          '(//30X,"BOUNDARY CONCENTRATIONS AFTER TRANSFORMATION TO SIGMA-LEVELS"/)') 
        IF(LIST(2) == 1) WRITE(OUT,'(12X,4(8X,"BC  NODE LYR "))') 
        IF(LIST(2) == 1) WRITE(OUT,'(11X,E12.4,2I4,E12.4,2I4,E12.4,2I4,E12.4,2I4)') &
	    (BBC(I,ISYS),(IBC(J,I,ISYS),J=1,2),I=1,NOBC(ISYS))
       END IF	    

       DO 335 I=1,NOBC(ISYS)
        IF(NOBCALL == 0) THEN
         NOBCALL = 1
         IBCALL(1,1) = IBC(1,I,ISYS)
         IBCALL(2,1) = IBC(2,I,ISYS)
        ELSE
         DO J=1,NOBCALL
          IF(IBC(1,I,ISYS) == IBCALL(1,J) .AND.                           &
            IBC(2,I,ISYS) == IBCALL(2,J)) GO TO 333
         END DO
         NOBCALL = NOBCALL+1
         IF(NOBCALL > MXBC)  GO TO 960
         IBCALL(1,NOBCALL) = IBC(1,I,ISYS)
         IBCALL(2,NOBCALL) = IBC(2,I,ISYS)
        ENDIF
!     APPLY SCALE FACTOR
  333   BBC(I,ISYS) = SCALBC(ISYS)*BBC(I,ISYS)
  335  CONTINUE

       GO TO 500

!!!      TIME-VARIABLE - STANDARD LEVELS
  400  IF(IBNRYRDOPTS(1) == 0) THEN  
        READ(32,'(A)')  COMMENT
!	print*,COMMENT
!        READ(32,'(10X,14I8)',ERR=950)  (IBC(1,I,ISYS),NOBCSL(I,ISYS),I=1,NOBC(ISYS)) 
        READ(32,'(10X,12I8)',ERR=950)  (IBC_GL(1,I,ISYS),NOBCSL_GL(I,ISYS),I=1,NOBC_GL(ISYS))  !Tian
		
       ELSE
        READ(32)  (IBC_GL(1,I,ISYS),NOBCSL_GL(I,ISYS),I=1,NOBC_GL(ISYS))
       ENDIF
!JQI       print*,'after reading NOBCSL',myid
       IF(LIST(2) == 1 .AND. MSR)  WRITE(OUT,3100)   (I,I=1,10)
        ALLOCATE(ZZ_TMP(NXY,NZ))    ;ZZ_TMP = 0.0
        ALLOCATE(HBAR_TMP(NXY))  ;HBAR_TMP = 0.0       
       JBC = 0
       DO I=1,NOBC_GL(ISYS)
        IF(IBNRYRDOPTS(1) == 0) THEN
          READ(32,'(10X,10F10.0)',ERR=950)  (SLBC(J),J=1,NOBCSL_GL(I,ISYS))
	      
!!!!!!!!!!!!!	  	  
        ELSE
          READ(32)  (SLBC(J),J=1,NOBCSL_GL(I,ISYS))
        ENDIF
        IF(LIST(2) == 1 .AND. MSR) WRITE(OUT,'(1X,I4,2X,10E10.3)')     &
	   IBC_GL(1,I,ISYS),(SLBC(J),J=1,NOBCSL_GL(I,ISYS))

!JQI       print*,'after reading SLBC',myid


	IF(SERIAL)THEN
	  ZZ_TMP = ZZ
	  HBAR_TMP = HBAR
	END IF  

# if defined (MULTIPROCESSOR)      
	IF(PAR)CALL GATHER(LBOUND(ZZ,1),UBOUND(ZZ,1),M,NXY,NZ,MYID,NPROCS,NMAP,ZZ,ZZ_TMP)
	IF(PAR)CALL GATHER(LBOUND(HBAR,1),UBOUND(HBAR,1),M,NXY,1,MYID,NPROCS,NMAP,HBAR,HBAR_TMP)
        IF(PAR) CALL MPI_BCAST(HBAR_TMP,NXY,MPI_REAL,0,MPI_COMM_WORLD,IERR)
	IF(PAR) CALL MPI_BCAST(ZZ_TMP,NXY*NZ,MPI_REAL,0,MPI_COMM_WORLD,IERR)		
# endif	

        DO IZ=1,NZ
          SIGDEPTH(IBC_GL(1,I,ISYS),IZ) =                                     &
                ! -ZZ_TMP(IBC_GL(1,I,ISYS),IZ)*HBAR_TMP(IBC_GL(1,I,ISYS))   !Tian
                   ZZ_TMP(IBC_GL(1,I,ISYS),IZ)*HBAR_TMP(IBC_GL(1,I,ISYS))   !Tian
                !   ZZ_TMP(IBC_GL(1,I,ISYS),IZ)*HG(IBC_GL(1,I,ISYS))   !Tian		   		 
        END DO
!        CALL SINTER(SLDEPTH(:,ISYS),SLBC,SIGDEPTH,SIGBC,NOBCSL(I,ISYS),NZ)  !Tian

        CALL SINTER(SLDEPTH(:,ISYS),SLBC(1:NOBCSL_GL(I,ISYS)),SIGDEPTH(IBC_GL(1,I,ISYS),:),SIGBC,NOBCSL_GL(I,ISYS),NZ)    !Tian
	
        DO IZ=1,NZ
          JBC = JBC + 1
          IF(JBC > MXBC) GO TO 960
          BBC_GL(JBC,ISYS) = SIGBC(IZ)  
        END DO
       END DO

        DEALLOCATE(ZZ_TMP,HBAR_TMP)

     !  ALLOCATE(IBCS_GL(NOBC_GL(ISYS)));  IBCS_GL = 0.0
       
       DO I=1,NOBC_GL(ISYS)
        IFROM = (NOBC_GL(ISYS)+1)-I
        ITO = NZ*(NOBC_GL(ISYS)-I)
	
	IBCS_GL(I) = IBC_GL(1,I,ISYS)
	
        DO IZ=1,NZ
          ITO = ITO+1
          IBC_GL(1,ITO,ISYS) = IBC_GL(1,IFROM,ISYS)
          IBC_GL(2,ITO,ISYS) = IZ
        END DO
       END DO

       NOBC_GL(ISYS) = JBC
       
       IF(SERIAL)THEN
         IBC = IBC_GL
	 BBC = BBC_GL
         NOBC(ISYS) = JBC
       END IF
       
# if defined (MULTIPROCESSOR)
       IF(PAR)THEN
	 ALLOCATE(TEMP1(NOBC_GL(ISYS)*NZ))   ;TEMP1 = 0
	 ALLOCATE(TEMP2(NOBC_GL(ISYS)*NZ))   ;TEMP2 = 0
	 ALLOCATE(TEMP3(NOBC_GL(ISYS)*NZ))   ;TEMP3 = 0.0
	 
	 NCNT = 0
	 JBC = 0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC_GL(ISYS)/NZ
	  DO IZ = 1,NZ
	   JBC = JBC+1
           IF(JBC > MXBC)  GO TO 960
	   I1 = NLID(IBC_GL(1,JBC,ISYS))
	   IF(I1 /= 0)THEN
	    NCNT = NCNT +1
	    TEMP1(NCNT) = I1
	    TEMP2(NCNT) = IBC_GL(2,JBC,ISYS)
	    TEMP3(NCNT) = BBC_GL(JBC,ISYS)
	   END IF
	  END DO  
	 END DO
	 NOBC(ISYS) = NCNT
	 IF(NCNT > 0)THEN
	  IBC(1,1:NCNT,ISYS) = TEMP1(1:NCNT)
	  IBC(2,1:NCNT,ISYS) = TEMP2(1:NCNT)
	  BBC(1:NCNT,ISYS)   = TEMP3(1:NCNT)
	 END IF  
	 DEALLOCATE(TEMP1,TEMP2,TEMP3) 
	 
	 FSM = 1.0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC_GL(ISYS)/NZ
	   I1 = NLID(IBCS_GL(I))
	   IF(I1 /= 0)THEN
	    FSM(I1)   = -1
	   END IF
         END DO  
       END IF 
# endif
     !  DEALLOCATE(IBCS_GL)

!JQI       NOBC_GL(ISYS) = NOBC(ISYS)*NLVLS    !Tian moved from line 398
!JQI       NOBC(ISYS) = NZ*NOBC(ISYS)
       
       IF(MSR .AND. SERIAL)THEN
        IF(LIST(2) == 1)  WRITE(OUT,        &
         '(//30X,"BOUNDARY CONCENTRATIONS AFTER TRANSFORMATION TO SIGMA-LEVELS"/)') 
        IF(LIST(2) == 1)  WRITE(OUT,'(12X,4(8X,"BC  NODE LYR "))') 
        IF(LIST(2) == 1)  WRITE(OUT,'(11X,E12.4,2I4,E12.4,2I4,E12.4,2I4,E12.4,2I4)')  &
                         (BBC(I,ISYS),(IBC(J,I,ISYS),J=1,2),I=1,NOBC(ISYS))
       END IF			 

!JQI       if(msr) print*,'before loop 445',myid
       DO 445 I=1,NOBC(ISYS)
!!!!!       if(msr) print*,'in loop 445',i,nobc(isys),myid
        IF(NOBCALL == 0) THEN
         NOBCALL = 1
         IBCALL(1,1) = IBC(1,I,ISYS)
         IBCALL(2,1) = IBC(2,I,ISYS)
        ELSE
         DO 440 J=1,NOBCALL
          IF(IBC(1,I,ISYS) == IBCALL(1,J) .AND. IBC(2,I,ISYS) == IBCALL(2,J))  GO TO 443
  440    CONTINUE
         NOBCALL = NOBCALL+1
         IBCALL(1,NOBCALL) = IBC(1,I,ISYS)
         IBCALL(2,NOBCALL) = IBC(2,I,ISYS)
        ENDIF
  443   BBC(I,ISYS) = SCALBC(ISYS)*BBC(I,ISYS) 
  445  CONTINUE


!JQI       if(msr) print*,'end loop 500',myid

  500 CONTINUE

      IF(IBCOPT == 1 .OR. IBCOPT == 3) RETURN
      IF(IBCOPT == 0) THEN
       IF(IBCOPT == 2 .OR. IBCOPT == 4) THEN
        IF(IBCPWLOPT == 0) THEN
          IF(IBNRYRDOPTS(1) == 0) THEN
            READ(32,'(10X,I10,6X,A4)',ERR=950)  NXBCTSECS
          ELSE
            READ(32)  NXBCTSECS
          ENDIF
          NXBCTSECS=ISCALBC*NXBCTSECS
          NXBCT=NXBCTSECS/86400.
        ELSE
	
          CALL RCA11
  
        ENDIF
       ENDIF

      ELSE

  550  IF(IBCPWLOPT == 0) THEN
         IF(IBNRYRDOPTS(1) == 0) THEN
           READ(32,'(10X,I10,6X,A4)',ERR=950)  NXBCTSECS
         ELSE
           READ(32)  NXBCTSECS
         ENDIF
         NXBCTSECS=ISCALBC*NXBCTSECS
         NXBCT=NXBCTSECS/86400.
       ENDIF
      
       CALL RCA11
      
       IF(INPCHCK == 1)  GO TO 550
      ! INPCHCK=1 !Temporal Tian
      ENDIF

!      NOBC_GL = NOBC
      
      IF(SERIAL) FSM(1:NXY)=FSM_TMP(1:NXY)
      DEALLOCATE(FSM_TMP)

  930 RETURN

  950 IN=32
      CALL FMTER
!JQI      CALL EXIT 
      CALL PSTOP('rca04_662 ')
  960 IF(MSR) WRITE(OUT,9600)  
 9600 FORMAT(//11X,'ERROR...USER REQUESTING MORE BOUNDARY CONDITIONS THAN ',  &
       'DIMENSIONED FOR IN -RCACM-'/11X,'RCA TERMINATED'//)
!JQI      CALL EXIT 
      CALL PSTOP('rca04_667 ')
  970 IF(MSR) WRITE(OUT,9700)  
 9700 FORMAT(//11X,'ERROR...USER REQUESTING MORE STANDARD LEVELS THAN ',      &
        'DIMENSIONED FOR IN -RCACM-'/11X,'RCA TERMINATED'//)
!JQI      CALL EXIT 
      CALL PSTOP('rca04_672 ')
      END SUBROUTINE RCA04
      
      SUBROUTINE GLOB2LOC04
      USE ALL_VARS,ONLY : PAR,MYID
      USE MOD_RCA
# if defined (MULTIPROCESSOR)
      USE MOD_PAR
# endif
      IMPLICIT NONE
      INTEGER :: I,I1,NCNT
      INTEGER,ALLOCATABLE,DIMENSION(:) :: TEMP1,TEMP2
      REAL,ALLOCATABLE,DIMENSION(:) :: TEMP3
     
# if defined (MULTIPROCESSOR)
       IF(PAR)THEN
        DO ISYS = 1,NOSYS
	 ALLOCATE(TEMP1(NOBC(ISYS)))   ;TEMP1 = 0
	 ALLOCATE(TEMP2(NOBC(ISYS)))   ;TEMP2 = 0
	 ALLOCATE(TEMP3(NOBC(ISYS)))   ;TEMP3 = 0.0
	 
	 NCNT = 0
	 FSM = 1.0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC(ISYS)
	  I1 = NLID(IBC(1,I,ISYS))
	  IF(I1 /= 0)THEN
	   NCNT = NCNT +1
	   TEMP1(NCNT) = I1
	   TEMP2(NCNT) = IBC(2,I,ISYS)
	   TEMP3(NCNT) = BBC(I,ISYS)
	   FSM(NCNT)   = -1
	  END IF
	 END DO
	 NOBC(ISYS) = NCNT
	 IF(NCNT > 0)THEN
	  IBC(1,1:NCNT,ISYS) = TEMP1(1:NCNT)
	  IBC(2,1:NCNT,ISYS) = TEMP2(1:NCNT)
	  BBC(1:NCNT,ISYS)   = TEMP3(1:NCNT)
	 END IF  
	 DEALLOCATE(TEMP1,TEMP2,TEMP3) 
	END DO

        ALLOCATE(TEMP1(NOBCALL))    ;TEMP1 = 0
        ALLOCATE(TEMP2(NOBCALL))    ;TEMP2 = 0	
	NCNT = 0
	DO I=1,NOBCALL 
	 I1 = NLID(IBCALL(1,I))
	 IF(I1 /= 0)THEN
	  NCNT = NCNT+1
	  TEMP1(NCNT) = I1
	  TEMP2(NCNT) = IBCALL(2,I)
	 END IF
	END DO
	NOBCALL = NCNT
	IF(NCNT > 0)THEN
	 IBCALL(1,1:NCNT) = TEMP1(1:NCNT)
	 IBCALL(2,1:NCNT) = TEMP2(1:NCNT)
	END IF
	DEALLOCATE(TEMP1,TEMP2)   
       END IF 
# endif
      
      RETURN
      END SUBROUTINE GLOB2LOC04
      
