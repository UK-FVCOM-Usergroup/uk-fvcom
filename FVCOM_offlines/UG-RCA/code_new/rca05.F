      SUBROUTINE RCA05
! 
!     RCA05 READS THE FORCING FUNCTIONS
! 
      USE ALL_VARS, ONLY : MSR,SERIAL,PAR,M,MYID,NPROCS,MT
      USE MOD_RCA
# if defined (MULTIPROCESSOR)
      USE MOD_PAR
# endif
      IMPLICIT NONE
      SAVE
!      INCLUDE  'RCACM'
      CHARACTER  LOCATION(MXWK)*50,COMMENT*80
      INTEGER IWK,I,IUNITCHECK,J
      REAL TOTLD,BATMC
      REAL,ALLOCATABLE :: FSM_TMP(:)   !,XAZ_TMP(:)
      INTEGER :: IERR

      ALLOCATE(FSM_TMP(NXY))   ;FSM_TMP = 0
      IF(SERIAL) FSM_TMP(1:NXY) = FSM(1:NXY)
      
# if defined (MULTIPROCESSOR)      
      IF(PAR) CALL GATHER(LBOUND(FSM,1),UBOUND(FSM,1),M,NXY,1,MYID,NPROCS,  &
                   NMAP,FSM,FSM_TMP)
      IF(PAR) CALL MPI_BCAST(FSM_TMP,NXY,MPI_REAL,0,MPI_COMM_WORLD,IERR)		   
# endif

!     NOTE: SINCE LOADS WILL BE DIVIDED BY THE SEGMENT VOLUMES IN
!     FORMULATING THE MASS BALANCE DERIVATIVE EQUATIONS THE FOLLOWING
!     CONVERSION IS NECESSARY 
!       KG/DAY * 10^6 MG/KG * M^3/10^3 L ==> MG*M^3/DAY-L

      IF(MSR) WRITE(OUT,'(////1X,119("*")//)') 

      TWARPPS='SECS'
      TWARPNPS='SECS'
      TWARPFL='SECS'
      TWARPATM='SECS'

!#############     POINT SOURCE LOADS

      READ(IN,'(A)') COMMENT
      IF(MSR) WRITE(OUT,'(//43X,"---- POINT SOURCE LOADINGS ----")')
      READ(IN,'(A40,I10)')  PSFILNA,IBNRYRDOPTS(2)
      IF(PSFILNA == 'NULL' .OR. PSFILNA == 'null' .OR. PSFILNA == 'Null') THEN
       PSFILNA='NULL'
       IF(MSR) WRITE(OUT,'(38X,"USER DID NOT SPECIFY A PS FILE TO BE READ")')
       DO ISYS=1,NOSYS 
        NOPS_GL(ISYS)=0
       ENDDO
       GO TO 100
      ENDIF

      IF(MSR) WRITE(OUT,'(//40X,"OPENING PSFILNA = ",A40)') PSFILNA
      IF(IBNRYRDOPTS(2) == 0) THEN
       OPEN(33,FILE=PSFILNA,FORM='FORMATTED')
       READ(33,'(A)') COMMENT
       READ(33,'(3I10)',ERR=933) IPSOPT,IPSPWLOPT
       READ(33,'(A)') COMMENT
       IF(MSR) WRITE(OUT,'(//41X,"POINT SOURCE LOADING TABLE"/3X,"LOAD"/     &
         2X,"NUMBER   IXY",1X,20("-")," LOCATION ",20("-"),1X,               &
         "---- VERTICAL DISTRIBUTION OF LOADS (FRACTION/LAYER) ---")')

       DO IWK=1,MXWK
!        READ(33,'(2I5,A50)',ERR=933)  (IPSTABL(I,IWK),I=1,2),LOCATION(IWK)
        READ(33,'(2I8,A50)',ERR=933)  (IPSTABL(I,IWK),I=1,2),LOCATION(IWK)	!Tian
        IF(IPSTABL(1,IWK) < 0) GO TO 25
        READ(33,'(10X,10F6.3)',ERR=933)  (ZFRACPS_GL(IZ,IWK),IZ=1,NZ)
        IF(MSR) WRITE(OUT,'(I7,I6,A50,1X,10F5.2/(69X,10F5.2))')       &
	  (IPSTABL(I,IWK),I=1,2),LOCATION(IWK),(ZFRACPS_GL(IZ,IWK),IZ=1,NZ)
       END DO
   
   25  IF(IPSOPT == 2) THEN
        READ(33,'(A)') COMMENT
        READ(33,'(10X,I10,6X,A4)',ERR=933)  NXPSTSECS,TWARPPS
       ENDIF
      ELSE
       OPEN(33,FILE=PSFILNA,FORM='UNFORMATTED')
       READ(33) IPSOPT,IPSPWLOPT
       IF(MSR) WRITE(OUT,'(//41X,"POINT SOURCE LOADING TABLE"/3X,"LOAD"/    &
         2X,"NUMBER   IXY",1X,20("-")," LOCATION ",20("-"),1X,              &
         "---- VERTICAL DISTRIBUTION OF LOADS (FRACTION/LAYER) ---")')
       DO IWK=1,MXWK
        READ(33,ERR=943)  (IPSTABL(I,IWK),I=1,2),LOCATION(IWK)
        IF(IPSTABL(1,IWK) < 0) GO TO 32
        READ(33,ERR=943)  (ZFRACPS_GL(IZ,IWK),IZ=1,NZ)
        IF(MSR) WRITE(OUT,'(I7,I6,A50,1X,10F5.2/(69X,10F5.2))')      &
	  (IPSTABL(I,IWK),I=1,2),LOCATION(IWK),(ZFRACPS_GL(IZ,IWK),IZ=1,NZ)
       END DO
   32  IF(IPSOPT == 2)  READ(33)  NXPSTSECS,TWARPPS
      ENDIF
      IF(IPSOPT == 2) THEN
       ISCALPS=IUNITCHECK(TWARPPS,'TWARPPS ')
       NXPSTSECS=ISCALPS*NXPSTSECS
       NXPST=NXPSTSECS/86400.
      ENDIF
      IF(MSR) WRITE(OUT,'(//40X,"POINT SOURCE LOADS AT TIME =",F8.2," DAYS")') NXPST

      DO 80 ISYS=1,NOSYS 
       IF(IBNRYRDOPTS(2) == 0) THEN
        READ(33,'(A)') COMMENT
        READ(33,'(3I10)',ERR=933) NOPS_GL(ISYS)
       ELSE
        READ(33) NOPS_GL(ISYS)
       ENDIF
       IF(NOPS_GL(ISYS) > MXWK) GO TO 960
       IF(NOPS_GL(ISYS) == 0) GO TO 70
       IF(MSR) WRITE(OUT,'(//42X,"POINT SOURCE LOADINGS FOR SYSTEM",I3)') ISYS
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))') SYNAME(ISYS)
       IF(MSR) WRITE(OUT,'(39X,"PS OPTION",I3," USED",5X,"NO.OF WK''S READ",I5)') IPSOPT,NOPS_GL(ISYS)
       IF(IPSPWLOPT == 0 .AND. MSR) WRITE(OUT,'(45X,"STEP FUNCTION OPTION SELECTED")')
       IF(IPSPWLOPT == 1 .AND. MSR) WRITE(OUT,'(43X,"PIECEWISE LINEAR OPTION SELECTED")')
       IF(IBNRYRDOPTS(2) == 0) THEN
        READ(33,'(A)') COMMENT
        READ(33,'(E10.3)',ERR=933)  SCALPS(ISYS)
       ELSE
        READ(33)  SCALPS(ISYS)
       ENDIF
       IF(MSR) WRITE(OUT,'(47X,"SCALE FACTOR",E13.3/)') SCALPS(ISYS)

       IF(IPSOPT == 1) THEN
       
        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,'(30X,"LOAD     IXY      LOCATION "/)') 
        IF(IBNRYRDOPTS(2) == 0) THEN
         READ(33,'(A)') COMMENT
         READ(33,'(5(F10.0,I5))',ERR=933)  (BPS_GL(I,ISYS),IPS_GL(3,I,ISYS),I=1,NOPS_GL(ISYS)) 
        ELSE
         READ(33)  (BPS_GL(I,ISYS),IPS_GL(3,I,ISYS),I=1,NOPS_GL(ISYS))
        ENDIF
        DO 35 I=1,NOPS_GL(ISYS)
         DO IWK=1,MXWK
          IF(IPS_GL(3,I,ISYS) == IPSTABL(1,IWK)) THEN
           IPS_GL(1,I,ISYS)=IPSTABL(2,IWK)
           IPS_GL(2,I,ISYS)=IWK
           GO TO 35
          ENDIF
         ENDDO
!        ERROR --- SPECIFIED LOAD NOT FOUND IN LOADING TABLE --- EXIT
         GO TO 965
   35   CONTINUE
        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,1700) (BPS_GL(I,ISYS),        &
           IPS_GL(1,I,ISYS),LOCATION(IPS_GL(2,I,ISYS)),I=1,NOPS_GL(ISYS))
 1700   FORMAT(25X,E12.4,I4,2X,A50)
        TOTLD = 0.
        DO 40 I=1,NOPS_GL(ISYS)
         BPS_GL(I,ISYS) = 1000.*SCALPS(ISYS)*BPS_GL(I,ISYS)
         TOTLD = TOTLD+BPS_GL(I,ISYS)
   40   CONTINUE
        IF(MSR) WRITE(OUT,2060)  TOTLD/1000.
 2060   FORMAT(/29X,'TOTAL POINT SOURCE LOADING =',E13.4,' KG/DAY')

       ELSE

        IF(LIST(3) == 1 .AND. MSR)   WRITE(OUT,'(30X,"LOAD     IXY      LOCATION "/)')
        IF(IBNRYRDOPTS(2) == 0)  THEN
         READ(33,'(10X,7I10)',ERR=933)  (IPS_GL(3,I,ISYS),I=1,NOPS_GL(ISYS))
         READ(33,'(10X,7F10.0)',ERR=933)  (BPS_GL(I,ISYS),I=1,NOPS_GL(ISYS))
        ELSE
         READ(33)  (IPS_GL(3,I,ISYS),I=1,NOPS_GL(ISYS))
         READ(33)  (BPS_GL(I,ISYS),I=1,NOPS_GL(ISYS))
        ENDIF
        DO 45 I=1,NOPS_GL(ISYS)
         DO IWK=1,MXWK
          IF(IPS_GL(3,I,ISYS) == IPSTABL(1,IWK))  THEN
           IPS_GL(1,I,ISYS)=IPSTABL(2,IWK)
           IPS_GL(2,I,ISYS)=IWK    !Not used now !Tian
           GO TO 45
          ENDIF
         ENDDO
!        ERROR --- SPECIFIED LOAD NOT FOUND IN LOADING TABLE --- EXIT
         GO TO 965
   45   CONTINUE
!        IF(LIST(3) == 1 .AND. MSR)  WRITE(OUT,1700)   (BPS_GL(I,ISYS),        &
!           IPS_GL(1,I,ISYS),LOCATION(IPS_GL(2,I,ISYS)),I=1,NOPS_GL(ISYS))
        IF(LIST(3) == 1 .AND. MSR)  WRITE(OUT,'(25X,E12.4,I8,2X,A50)') (BPS_GL(I,ISYS),        &  !Tian
           IPS_GL(1,I,ISYS),LOCATION(IPS_GL(2,I,ISYS)),I=1,NOPS_GL(ISYS))  
 
        TOTLD = 0.0
        DO 50 I=1,NOPS_GL(ISYS)
!IF(ISYS.eq.14)print*,'rca05 180 ',NOPS_GL(ISYS),SCALPS(ISYS),BPS_GL(I,ISYS) 	
         BPS_GL(I,ISYS) = 1000.*SCALPS(ISYS)*BPS_GL(I,ISYS) 
         TOTLD = TOTLD+BPS_GL(I,ISYS)
   50   CONTINUE
        IF(MSR) WRITE(OUT,2080)  TIME,TOTLD/1000.
 2080   FORMAT(/29X,'TOTAL POINT SOURCE LOADING AT TIME,',F7.2,' =',E13.4,' KG/DAY')

       ENDIF

!      CHECK FOR ERRONEOUS SEGMENT NUMBER
       DO 60 I=1,NOPS_GL(ISYS)
        IXY=IPS_GL(1,I,ISYS)
	IF(FSM_TMP(IXY) /= 1.)  GO TO 990
   60  CONTINUE

       GO TO 80 

   70  IF(MSR) WRITE(OUT,2090)    ISYS 
 2090  FORMAT(///40X,'NO POINT SOURCE LOADINGS FOR SYSTEM',I3) 
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))')   SYNAME(ISYS)

   80 CONTINUE

      IF(IPSOPT == 1) GO TO 100
      IF(INPCHCK == 0) THEN
       IF(IPSOPT == 2) THEN
        IF(IPSPWLOPT == 0) THEN
         IF(IBNRYRDOPTS(2) == 0) THEN
          READ(33,'(10X,I10,6X,A4)',ERR=933) NXPSTSECS
         ELSE
          READ(33) NXPSTSECS
         ENDIF
         NXPSTSECS=ISCALPS*NXPSTSECS
         NXPST=NXPSTSECS/86400.
        ELSE
         CALL RCA10(SPS_GL,BPS_GL,MXWK,NOPS_GL,NXPST,33,IPSPWLOPT,SCALPS)
        ENDIF
       ENDIF

      ELSE

   90  IF(IPSPWLOPT == 0) THEN
        IF(IBNRYRDOPTS(2) == 0) THEN
         READ(33,'(10X,I10,6X,A4)',ERR=933)  NXPSTSECS
        ELSE
         READ(33) NXPSTSECS
        ENDIF
        NXPSTSECS=ISCALPS*NXPSTSECS
        NXPST=NXPSTSECS/86400.
       ENDIF
       CALL RCA10(SPS_GL,BPS_GL,MXWK,NOPS_GL,NXPST,33,IPSPWLOPT,SCALPS)
#    if defined (MULTIPROCESSOR)
        IF(PAR)CALL MPI_BARRIER(MPI_COMM_WORLD,IERR)
#    endif
       BACKSPACE(33)
       IF(INPCHCK == 1) GO TO 90
     !  INPCHCK=1  !Tian Temproal

      ENDIF

  100 CONTINUE

!     NONPOINT SOURCE LOADS

      READ(IN,'(A)')  COMMENT
      IF(MSR) WRITE(OUT,'(//42X,"---- NONPOINT SOURCE LOADINGS ----")')
      READ(IN,'(A40,I10)')  NPSFILNA,IBNRYRDOPTS(3)
      IF(NPSFILNA == 'NULL' .OR. NPSFILNA == 'null' .OR. NPSFILNA == 'Null') THEN
       NPSFILNA='NULL'
       IF(MSR) WRITE(OUT,'(38X,"USER DID NOT SPECIFY A NPS FILE TO BE READ")')
       DO ISYS=1,NOSYS 
        NONPS_GL(ISYS)=0
       ENDDO
       GO TO 200
      ENDIF
      IF(MSR) WRITE(OUT,'(//40X,"OPENING NPSFILNA = ",A40)') NPSFILNA
      IF(IBNRYRDOPTS(3) == 0) THEN
       OPEN(34,FILE=NPSFILNA,FORM='FORMATTED')
       READ(34,'(A)') COMMENT
       READ(34,'(3I10)',ERR=934) INPSOPT,INPSPWLOPT
       READ(34,'(A)') COMMENT
       IF(MSR) WRITE(OUT,3020)
 3020  FORMAT(//39X,'NONPOINT SOURCE LOADING TABLE'/3X,'LOAD'/            &
         2X,'NUMBER   IXY',1X,20('-'),' LOCATION ',20('-'),1X,            &
         '---- VERTICAL DISTRIBUTION OF LOADS (FRACTION/LAYER) ---')
       DO 120 IWK=1,MXWK
!        READ(34,'(2I5,A50)',ERR=934)  (INPSTABL(I,IWK),I=1,2),LOCATION(IWK)
        READ(34,'(2I8,A50)',ERR=934)  (INPSTABL(I,IWK),I=1,2),LOCATION(IWK)  !Tian	
        IF(INPSTABL(1,IWK) < 0) GO TO 125
        READ(34,'(10X,10F6.3)',ERR=934)  (ZFRACNPS_GL(IZ,IWK),IZ=1,NZ)
        IF(MSR) WRITE(OUT,'(I7,I6,A50,1X,10F5.2/(69X,10F5.2))')       &
	  (INPSTABL(I,IWK),I=1,2),LOCATION(IWK),(ZFRACNPS_GL(IZ,IWK),IZ=1,NZ)
  120  CONTINUE
  125  IF(INPSOPT == 2) THEN
        READ(34,'(A)') COMMENT
        READ(34,'(10X,I10,6X,A4)',ERR=934)  NXNPSTSECS,TWARPNPS
       ENDIF
      ELSE
       OPEN(34,FILE=NPSFILNA,FORM='UNFORMATTED')
       READ(34) INPSOPT,INPSPWLOPT
       IF(MSR) WRITE(OUT,3020)
       DO 130 IWK=1,MXWK
        READ(34,ERR=944)  (INPSTABL(I,IWK),I=1,2),LOCATION(IWK)
        IF(INPSTABL(1,IWK) < 0) GO TO 132
        READ(34,ERR=944)  (ZFRACNPS_GL(IZ,IWK),IZ=1,NZ)
        IF(MSR) WRITE(OUT,'(I7,I6,A50,1X,10F5.2/(69X,10F5.2))')       &
	  (INPSTABL(I,IWK),I=1,2),LOCATION(IWK),(ZFRACNPS_GL(IZ,IWK),IZ=1,NZ)
  130  CONTINUE
  132  IF(INPSOPT == 2)  READ(34)  NXNPSTSECS,TWARPNPS
      ENDIF
      IF(INPSOPT == 2) THEN
       ISCALNPS=IUNITCHECK(TWARPNPS,'TWARPNPS')
       NXNPSTSECS=ISCALNPS*NXNPSTSECS
       NXNPST=NXNPSTSECS/86400.
      ENDIF
      IF(MSR) WRITE(OUT,1121)  NXNPST
 1121 FORMAT(//38X,'NONPOINT SOURCE LOADS AT TIME =',F8.2,' DAYS')

      DO 180 ISYS=1,NOSYS 
       IF(IBNRYRDOPTS(3) == 0) THEN
        READ(34,'(A)') COMMENT
        READ(34,'(3I10)',ERR=934) NONPS_GL(ISYS)
       ELSE
        READ(34) NONPS_GL(ISYS)
       ENDIF
       IF(NONPS_GL(ISYS) > MXWK) GO TO 962
       IF(NONPS_GL(ISYS) == 0) GO TO 170
       IF(MSR) WRITE(OUT,2011) ISYS
 2011  FORMAT(//41X,'NONPOINT SOURCE LOADINGS FOR SYSTEM',I3) 
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))')   SYNAME(ISYS)
       IF(MSR) WRITE(OUT,2021) INPSOPT,NONPS_GL(ISYS)
 2021  FORMAT(39X,'NPS OPTION',I3,' USED',5X,'NO.OF WKS''S READ',I5)
       IF(INPSPWLOPT == 0 .AND. MSR) WRITE(OUT,'(45X,"STEP FUNCTION OPTION SELECTED")')
       IF(INPSPWLOPT == 1 .AND. MSR) WRITE(OUT,'(43X,"PIECEWISE LINEAR OPTION SELECTED")')
       IF(IBNRYRDOPTS(3) == 0) THEN
        READ(34,'(A)') COMMENT
        READ(34,'(E10.3)',ERR=934)  SCALNPS(ISYS)
       ELSE
        READ(34)  SCALNPS(ISYS)
       ENDIF
       IF(MSR) WRITE(OUT,'(47X,"SCALE FACTOR",E13.3/)')  SCALNPS(ISYS)

       IF(INPSOPT == 1) THEN
        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,'(30X,"LOAD     IXY      LOCATION "/)') 
        IF(IBNRYRDOPTS(3) == 0) THEN
         READ(34,'(A)') COMMENT
         READ(34,'(5(F10.0,I5))',ERR=934)  (BNPS_GL(I,ISYS),INPS_GL(3,I,ISYS),    &
              I=1,NONPS_GL(ISYS)) 
        ELSE
         READ(34)  (BNPS_GL(I,ISYS),INPS_GL(3,I,ISYS),I=1,NONPS_GL(ISYS))
        ENDIF
        DO 135 I=1,NONPS_GL(ISYS)
         DO IWK=1,MXWK
          IF(INPS_GL(3,I,ISYS) == INPSTABL(1,IWK)) THEN
           INPS_GL(1,I,ISYS)=INPSTABL(2,IWK)
           INPS_GL(2,I,ISYS)=IWK
           GO TO 135
          ENDIF
         ENDDO
!        ERROR --- SPECIFIED LOAD NOT FOUND IN LOADING TABLE --- EXIT
         GO TO 970
  135   CONTINUE
!        IF(LIST(3) == 1 .AND. MSR)  WRITE(OUT,1700)   (BNPS_GL(I,ISYS),       &
!           INPS_GL(1,I,ISYS),LOCATION(INPS_GL(2,I,ISYS)),I=1,NONPS_GL(ISYS))
        IF(LIST(3) == 1 .AND. MSR)  WRITE(OUT,'(25X,E12.4,I8,2X,A50)') (BNPS_GL(I,ISYS),       &    !Tian
           INPS_GL(1,I,ISYS),LOCATION(INPS_GL(2,I,ISYS)),I=1,NONPS_GL(ISYS))	   	   
	   
!       MULTIPLY BY SCALE FACTOR AND APPLY CONVERSION FACTOR
        TOTLD = 0.0
        DO 140 I=1,NONPS_GL(ISYS)
         BNPS_GL(I,ISYS) = 1000.*SCALNPS(ISYS)*BNPS_GL(I,ISYS)
         TOTLD = TOTLD+BNPS_GL(I,ISYS)
  140   CONTINUE
        IF(MSR) WRITE(OUT,3060)  TOTLD/1000.
 3060   FORMAT(/29X,'TOTAL NONPOINT SOURCE LOADING =',E13.4,' KG/DAY')

       ELSE

        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,'(30X,"LOAD     IXY      LOCATION "/)')
        IF(IBNRYRDOPTS(3) == 0) THEN
         READ(34,'(10X,7I10)',ERR=934)  (INPS_GL(3,I,ISYS),I=1,NONPS_GL(ISYS))
         READ(34,'(10X,7F10.0)',ERR=934)  (BNPS_GL(I,ISYS),I=1,NONPS_GL(ISYS))
        ELSE
         READ(34)  (INPS_GL(3,I,ISYS),I=1,NONPS_GL(ISYS))
         READ(34)  (BNPS_GL(I,ISYS),I=1,NONPS_GL(ISYS))
        ENDIF
        DO 145 I=1,NONPS_GL(ISYS)
         DO IWK=1,MXWK
          IF(INPS_GL(3,I,ISYS) == INPSTABL(1,IWK)) THEN
           INPS_GL(1,I,ISYS)=INPSTABL(2,IWK)
           INPS_GL(2,I,ISYS)=IWK
           GO TO 145
          ENDIF
         ENDDO
!        ERROR --- SPECIFIED LOAD NOT FOUND IN LOADING TABLE --- EXIT
         GO TO 970
  145   CONTINUE
!        IF(LIST(3) == 1 .AND. MSR)  WRITE(OUT,1700)   (BNPS_GL(I,ISYS),        &
!           INPS_GL(1,I,ISYS),LOCATION(INPS_GL(2,I,ISYS)), I=1,NONPS_GL(ISYS))
        IF(LIST(3) == 1 .AND. MSR)  WRITE(OUT,'(25X,E12.4,I8,2X,A50)') (BNPS_GL(I,ISYS),        &
           INPS_GL(1,I,ISYS),LOCATION(INPS_GL(2,I,ISYS)), I=1,NONPS_GL(ISYS))	   
        TOTLD = 0.0
        DO 150 I=1,NONPS_GL(ISYS)
         BNPS_GL(I,ISYS) = 1000.*SCALNPS(ISYS)*BNPS_GL(I,ISYS) 
         TOTLD = TOTLD+BNPS_GL(I,ISYS)
  150   CONTINUE
        IF(MSR) WRITE(OUT,3080)  TIME,TOTLD/1000.
 3080   FORMAT(/29X,'TOTAL NONPOINT SOURCE LOADING AT TIME,',F7.2,' =',E13.4,' KG/DAY')

       ENDIF

!      CHECK FOR ERRONEOUS SEGMENT NUMBER
       DO 160 I=1,NONPS_GL(ISYS)
        IXY=INPS_GL(1,I,ISYS)
        IF(FSM_TMP(IXY) /= 1.)  GO TO 990
 160   CONTINUE

       GO TO 180 

  170  IF(MSR) WRITE(OUT,3090)    ISYS 
 3090  FORMAT(///40X,'NO NONPOINT SOURCE LOADINGS FOR SYSTEM',I3) 
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))')   SYNAME(ISYS)

  180 CONTINUE

      IF(INPSOPT == 1) GO TO 200
      IF(INPCHCK == 0) THEN
       IF(INPSOPT == 2) THEN
        IF(INPSPWLOPT == 0) THEN
         IF(IBNRYRDOPTS(3) == 0) THEN
          READ(34,'(10X,I10,6X,A4)',ERR=934)  NXNPSTSECS
         ELSE
          READ(34)  NXNPSTSECS
         ENDIF
         NXNPSTSECS=ISCALNPS*NXNPSTSECS
         NXNPST=NXNPSTSECS/86400.
        ELSE
         CALL RCA10(SNPS_GL,BNPS_GL,MXWK,NONPS_GL,NXNPST,34,INPSPWLOPT,SCALNPS)
        ENDIF
       ENDIF

      ELSE

  190  IF(INPSPWLOPT == 0) THEN
        IF(IBNRYRDOPTS(3) == 0) THEN
         READ(34,'(10X,I10,6X,A4)',ERR=934)  NXNPSTSECS
        ELSE
         READ(34)   NXNPSTSECS
        ENDIF
        NXNPSTSECS=ISCALNPS*NXNPSTSECS
        NXNPST=NXNPSTSECS/86400.
       ENDIF
       CALL RCA10(SNPS_GL,BNPS_GL,MXWK,NONPS_GL,NXNPST,34,INPSPWLOPT,SCALNPS)
#    if defined (MULTIPROCESSOR)
        IF(PAR)CALL MPI_BARRIER(MPI_COMM_WORLD,IERR)
#    endif
       BACKSPACE(34)
       IF(INPCHCK == 1) GO TO 190
      ! INPCHCK=1  !Temporal Tian

      ENDIF

  200 CONTINUE

!     FALL-LINE LOADS

      READ(IN,'(A)')  COMMENT
      IF(MSR) WRITE(OUT,'(//42X,"---- FALL-LINE SOURCE LOADINGS ----")')
      READ(IN,'(A40,I10)')  FLFILNA,IBNRYRDOPTS(4)
      IF(FLFILNA == 'NULL' .OR. FLFILNA == 'null' .OR. FLFILNA == 'Null') THEN
       FLFILNA='NULL'
       IF(MSR) WRITE(OUT,'(38X,"USER DID NOT SPECIFY A FL FILE TO BE READ")')
       DO ISYS=1,NOSYS 
        NOFL_GL(ISYS)=0
       ENDDO
       GO TO 300
      ENDIF
      IF(MSR) WRITE(OUT,'(//40X,"OPENING FLFILNA = ",A40)') FLFILNA
      IF(IBNRYRDOPTS(4) == 0) THEN
       OPEN(35,FILE=FLFILNA,FORM='FORMATTED')
       READ(35,'(A)') COMMENT
       READ(35,'(3I10)',ERR=935) IFLOPT,IFLPWLOPT
       READ(35,'(A)') COMMENT
       IF(MSR) WRITE(OUT,4020)
 4020  FORMAT(//42X,'FALL LINE LOADING TABLE'/3X,'LOAD'/                  &
         2X,'NUMBER   IXY',1X,20('-'),' LOCATION ',20('-'),1X,            &
         '---- VERTICAL DISTRIBUTION OF LOADS (FRACTION/LAYER) ---')
       DO 320 IWK=1,MXWK
!        READ(35,'(2I5,A50)',ERR=935)  (IFLTABL(I,IWK),I=1,2),LOCATION(IWK)
        READ(35,'(2I8,A50)',ERR=935)  (IFLTABL(I,IWK),I=1,2),LOCATION(IWK)  !Tian	
        IF(IFLTABL(1,IWK) < 0) GO TO 325
        READ(35,'(10X,10F6.3)',ERR=935)  (ZFRACFL_GL(IZ,IWK),IZ=1,NZ)
        IF(MSR) WRITE(OUT,'(I7,I6,A50,1X,10F5.2/(69X,10F5.2))')       &
	  (IFLTABL(I,IWK),I=1,2),LOCATION(IWK),(ZFRACFL_GL(IZ,IWK),IZ=1,NZ)
  320  CONTINUE
  325  IF(IFLOPT == 2) THEN
        READ(35,'(A)') COMMENT
        READ(35,'(10X,I10,6X,A4)',ERR=935)  NXFLTSECS,TWARPFL
       ENDIF
      ELSE
       OPEN(35,FILE=FLFILNA,FORM='UNFORMATTED')
       READ(35) IFLOPT,IFLPWLOPT
       IF(MSR) WRITE(OUT,4020)
       DO 330 IWK=1,MXWK
        READ(35,ERR=945)  (IFLTABL(I,IWK),I=1,2),LOCATION(IWK)
        IF(IFLTABL(1,IWK) < 0) GO TO 332
        READ(35,ERR=945)  (ZFRACFL_GL(IZ,IWK),IZ=1,NZ)
        IF(MSR) WRITE(OUT,'(I7,I6,A50,1X,10F5.2/(69X,10F5.2))')       &
	  (IFLTABL(I,IWK),I=1,2),LOCATION(IWK),(ZFRACFL_GL(IZ,IWK),IZ=1,NZ)
  330  CONTINUE
  332  IF(IFLOPT == 2)  READ(35)  NXFLTSECS,TWARPFL
      ENDIF
      IF(IFLOPT == 2) THEN
       ISCALFL=IUNITCHECK(TWARPFL,'TWARPFL ')
       NXFLTSECS=ISCALFL*NXFLTSECS
       NXFLT=NXFLTSECS/86400.
      ENDIF
      IF(MSR) WRITE(OUT,'(//41X,"FALL-LINE LOADS AT TIME =",F8.2," DAYS")') NXFLT

      DO 280 ISYS=1,NOSYS 

       IF(IBNRYRDOPTS(4) == 0) THEN
        READ(35,'(A)') COMMENT
        READ(35,'(3I10)',ERR=935) NOFL_GL(ISYS)
       ELSE
        READ(35) NOFL_GL(ISYS)
       ENDIF
       IF(NOFL_GL(ISYS) > MXWK) GO TO 964
       IF(NOFL_GL(ISYS) == 0) GO TO 270
       IF(MSR) WRITE(OUT,'(//43X,"FALL-LINE LOADINGS FOR SYSTEM",I3)') ISYS
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))')   SYNAME(ISYS)
       IF(MSR) WRITE(OUT,4040) IFLOPT,NOFL_GL(ISYS)
 4040  FORMAT(39X,'FL OPTION',I3,' USED',5X,'NO.OF FL''S READ',I5)
       IF(IFLPWLOPT == 0 .AND. MSR) WRITE(OUT,'(45X,"STEP FUNCTION OPTION SELECTED")')
       IF(IFLPWLOPT == 1 .AND. MSR) WRITE(OUT,'(43X,"PIECEWISE LINEAR OPTION SELECTED")')
       IF(IBNRYRDOPTS(4) == 0) THEN
        READ(35,'(A)') COMMENT
        READ(35,'(E10.3)',ERR=935)  SCALFL(ISYS)
       ELSE
        READ(35)  SCALFL(ISYS)
       ENDIF
       IF(MSR) WRITE(OUT,'(47X,"SCALE FACTOR",E13.3/)')  SCALFL(ISYS)

       IF(IFLOPT == 1) THEN

        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,4050) 
 4050   FORMAT(12X,4(8X,'FL  ROW COL LYR ')/) 
        IF(IBNRYRDOPTS(4) == 0) THEN
         READ(35,'(A)') COMMENT
         READ(35,'(5(F10.0,I5))',ERR=935)  (BFL_GL(I,ISYS),IFL_GL(3,I,ISYS),       &
              I=1,NOFL_GL(ISYS)) 
        ELSE
         READ(35)  (BFL_GL(I,ISYS),IFL_GL(3,I,ISYS),I=1,NOFL_GL(ISYS)) 
        ENDIF
        DO 235 I=1,NOFL_GL(ISYS)
         DO IWK=1,MXWK
          IF(IFL_GL(3,I,ISYS) == IFLTABL(1,IWK)) THEN
           IFL_GL(1,I,ISYS)=IFLTABL(2,IWK)
           IFL_GL(2,I,ISYS)=IWK
           GO TO 235
          ENDIF
         ENDDO
!        ERROR --- SPECIFIED LOAD NOT FOUND IN LOADING TABLE --- EXIT
         GO TO 975
  235   CONTINUE
        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,1700)   (BFL_GL(I,ISYS),          &
           IFL_GL(1,I,ISYS),LOCATION(IFL_GL(2,I,ISYS)),I=1,NOFL_GL(ISYS))
!       MULTIPLY BY SCALE FACTOR AND APPLY CONVERSION FACTOR
        TOTLD = 0.0
        DO 240 I=1,NOFL_GL(ISYS)
         BFL_GL(I,ISYS) = 1000.*SCALFL(ISYS)*BFL_GL(I,ISYS)
         TOTLD = TOTLD+BFL_GL(I,ISYS)
  240   CONTINUE
        IF(MSR) WRITE(OUT,4060)  TOTLD/1000.
 4060   FORMAT(/29X,'TOTAL FALL-LINE SOURCE LOADING =',E13.4,' KG/DAY')

       ELSE

        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,'(30X,"LOAD     IXY      LOCATION "/)')
        IF(IBNRYRDOPTS(4) == 0) THEN
         READ(35,'(10X,7I10)',ERR=935)  (IFL_GL(3,I,ISYS),I=1,NOFL_GL(ISYS))
         READ(35,'(10X,7F10.0)',ERR=935)  (BFL_GL(I,ISYS),I=1,NOFL_GL(ISYS))
        ELSE
         READ(35)  (IFL_GL(3,I,ISYS),I=1,NOFL_GL(ISYS))
         READ(35)  (BFL_GL(I,ISYS),I=1,NOFL_GL(ISYS))
        ENDIF
        DO 245 I=1,NOFL_GL(ISYS)
         DO IWK=1,MXWK
          IF(IFL_GL(3,I,ISYS) == IFLTABL(1,IWK)) THEN
           IFL_GL(1,I,ISYS)=IFLTABL(2,IWK)
           IFL_GL(2,I,ISYS)=IWK
           GO TO 245
          ENDIF
         ENDDO
!        ERROR --- SPECIFIED LOAD NOT FOUND IN LOADING TABLE --- EXIT
         GO TO 975
  245   CONTINUE
!        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,1700)   (BFL_GL(I,ISYS),        &
!           IFL_GL(1,I,ISYS),LOCATION(IFL_GL(2,I,ISYS)),I=1,NOFL_GL(ISYS))
        IF(LIST(3) == 1 .AND. MSR) WRITE(OUT,'(25X,E12.4,I8,2X,A50)') (BFL_GL(I,ISYS),        &   !Tian
           IFL_GL(1,I,ISYS),LOCATION(IFL_GL(2,I,ISYS)),I=1,NOFL_GL(ISYS))	   
        TOTLD = 0.0
        DO 250 I=1,NOFL_GL(ISYS)
         BFL_GL(I,ISYS) = 1000.*SCALFL(ISYS)*BFL_GL(I,ISYS) 
         TOTLD = TOTLD+BFL_GL(I,ISYS)
  250   CONTINUE
        IF(MSR) WRITE(OUT,4080)  TIME,TOTLD/1000.
 4080   FORMAT(/29X,'TOTAL FALL-LINE SOURCE LOADING AT TIME,',F7.2,       &
          ' =',E13.4,' KG/DAY')

       ENDIF

!      CHECK FOR ERRONEOUS SEGMENT NUMBER
       DO 260 I=1,NOFL_GL(ISYS)
        IXY=IFL_GL(1,I,ISYS)
        IF(FSM_TMP(IXY) /= 1.) GO TO 990
 260   CONTINUE

       GO TO 280 

  270  IF(MSR) WRITE(OUT,4090)    ISYS 
 4090  FORMAT(///40X,'NO FALL-LINE LOADINGS FOR SYSTEM',I3) 
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))')   SYNAME(ISYS)

  280 CONTINUE

      IF(IFLOPT == 1) GO TO 300
      IF(INPCHCK == 0) THEN
       IF(IFLOPT == 2) THEN
        IF(IFLPWLOPT == 0) THEN
         IF(IBNRYRDOPTS(4) == 0) THEN
          READ(35,'(10X,I10,6X,A4)',ERR=935)  NXFLTSECS
         ELSE
          READ(35)  NXFLTSECS
         ENDIF
         NXFLTSECS=ISCALFL*NXFLTSECS
         NXFLT=NXFLTSECS/86400.
        ELSE
         CALL RCA10(SFL_GL,BFL_GL,MXWK,NOFL_GL,NXFLT,35,IFLPWLOPT,SCALFL)
        ENDIF
       ENDIF

      ELSE

  290  IF(IFLPWLOPT == 0) THEN
        IF(IBNRYRDOPTS(4) == 0) THEN
         READ(35,'(10X,I10,6X,A4)',ERR=935)  NXFLTSECS
        ELSE
         READ(35)   NXFLTSECS
        ENDIF
        NXFLTSECS=ISCALFL*NXFLTSECS
        NXFLT=NXFLTSECS/86400.
       ENDIF
       CALL RCA10(SFL_GL,BFL_GL,MXWK,NOFL_GL,NXFLT,35,IFLPWLOPT,SCALFL)
#    if defined (MULTIPROCESSOR)
        IF(PAR)CALL MPI_BARRIER(MPI_COMM_WORLD,IERR)
#    endif
       BACKSPACE(35)
       IF(INPCHCK == 1) GO TO 290
      ! INPCHCK=1 !Temporal Tian

      ENDIF

  300 CONTINUE

!     ATMOSPHERIC LOADS

      ALLOCATE(BATM_GL(NXY,NOSYS))  ;BATM_GL = 0.0
      ALLOCATE(SATM_GL(NXY,NOSYS)) ; SATM_GL = 0.0
      !ALLOCATE(BATM(MT,NOSYS))  ;BATM = 0.0
      !ALLOCATE(SATM(MT,NOSYS)) ; SATM = 0.0      

      READ(IN,'(A)')  COMMENT
      IF(MSR) WRITE(OUT,'(//41X,"---- ATMOSPHERIC SOURCE LOADINGS ----")')
      READ(IN,'(A40,I10)')  ATMFILNA,IBNRYRDOPTS(5)
      IF(ATMFILNA == 'NULL' .OR. ATMFILNA == 'null' .OR. ATMFILNA == 'Null') THEN
       ATMFILNA='NULL'
       IF(MSR) WRITE(OUT,'(38X,"USER DID NOT SPECIFY AN ATM FILE TO BE READ")')
       DO ISYS=1,NOSYS 
        NOATM_GL(ISYS)=0
       ENDDO
       GO TO 400
      ENDIF
      IF(MSR) WRITE(OUT,'(//40X,"OPENING ATMFILNA = ",A40)') ATMFILNA
      IF(IBNRYRDOPTS(5) == 0) THEN
       OPEN(36,FILE=ATMFILNA,FORM='FORMATTED')
       READ(36,'(A)') COMMENT
       READ(36,'(3I10)',ERR=936) IATMOPT,IATMPWLOPT
       IF(IATMOPT == 2) THEN
        READ(36,'(A)') COMMENT
        READ(36,'(10X,I10,6X,A4)',ERR=936)  NXATMTSECS,TWARPATM
       ENDIF
      ELSE
       OPEN(36,FILE=ATMFILNA,FORM='UNFORMATTED')
       READ(36) IATMOPT,IATMPWLOPT
       IF(IATMOPT == 2) READ(36)  NXATMTSECS,TWARPATM
      ENDIF
      IF(IATMOPT == 2) THEN
       ISCALATM=IUNITCHECK(TWARPATM,'TWARPATM')
       NXATMTSECS=ISCALATM*NXATMTSECS
       NXATMT=NXATMTSECS/86400.
      ENDIF
      IF(MSR) WRITE(OUT,'(//40X,"ATMOSPHERIC LOADS AT TIME =",F8.2," DAYS")')  NXATMT

      DO 380 ISYS=1,NOSYS 

       IF(IBNRYRDOPTS(5) == 0) THEN
        READ(36,'(A)') COMMENT
        READ(36,'(3I10)',ERR=936) NOATM_GL(ISYS)
       ELSE
        READ(36) NOATM_GL(ISYS)
       ENDIF
       IF(NOATM_GL(ISYS) == 0) GO TO 370
       IF(MSR) WRITE(OUT,'(//43X,"ATMOSPHERIC LOADINGS FOR SYSTEM",I3)') ISYS
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))')   SYNAME(ISYS)
       IF(MSR) WRITE(OUT,'(39X,"IATMOPT OPTION",I3," USED",5X,"NOATM OPTION",     &
                           I5," USED")') IATMOPT,NOATM_GL(ISYS)
       IF(IATMPWLOPT == 0 .AND. MSR) WRITE(OUT,'(45X,"STEP FUNCTION OPTION SELECTED")')
       IF(IATMPWLOPT == 1 .AND. MSR) WRITE(OUT,'(43X,"PIECEWISE LINEAR OPTION SELECTED")')
       IF(IBNRYRDOPTS(5) == 0) THEN
        READ(36,'(A)') COMMENT
        READ(36,'(E10.3)',ERR=936)  SCALATM(ISYS)
       ELSE
        READ(36)  SCALATM(ISYS)
       ENDIF
       IF(MSR) WRITE(OUT,'(47X,"SCALE FACTOR",E13.3/)')  SCALATM(ISYS)

       IF(IATMOPT == 1) THEN
!       CONSTANT ATMOSPHERIC LOADINGS
        IF(IBNRYRDOPTS(5) == 0) THEN
         IF(NOATM(ISYS) == 1) THEN
          READ(36,'(A)') COMMENT
          READ(36,'(10X,7F10.0)',ERR=936)  BATMC
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) == 1.) BATM_GL(IXY,ISYS)=BATMC
          ENDDO
         ELSE
          READ(36,'(A)') COMMENT
          READ(36,'(10X,7F10.0)',ERR=936) (BATM_GL(IXY,ISYS),IXY=1,NXY)
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) /= 1.) BATM_GL(IXY,ISYS)=0.0
          ENDDO
         ENDIF
        ELSE
         IF(NOATM(ISYS) == 1) THEN
          READ(36)  BATMC
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) == 1.) BATM_GL(IXY,ISYS)=BATMC
          ENDDO
         ELSE
          READ(36) (BATM_GL(IXY,ISYS),IXY=1,NXY)
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) /= 1.)  BATM_GL(IXY,ISYS)=0.0
          ENDDO
         ENDIF
        ENDIF
        IF(LIST(3) == 1) THEN
         IF(NOATM_GL(ISYS) == 1) THEN
          IF(MSR) WRITE(OUT,'(42X,"ATMOSPHERIC LOADING =",E13.3)') BATMC
         ELSE
          IF(MSR) WRITE(OUT,'(42X,"SPATIALLY DEPENDENT ATMOSPHERIC LOADINGS"/3X,"IY")')

          IF(MSR) WRITE(OUT,'(10E11.3/(5X,10E11.3))') (BATM_GL(IXY,ISYS),IXY=1,NXY)
         ENDIF
        ENDIF
!       MULTIPLY BY SCALE FACTOR AND APPLY CONVERSION FACTOR
!        KG/M^2-DAY ==> MG*M^3/DAY-M^2-L
        DO IXY=1,NXY
         BATM_GL(IXY,ISYS) = 1000.*SCALATM(ISYS)*BATM_GL(IXY,ISYS)
        END DO 

        TOTLD = 0.0
	IF(.NOT. ALLOCATED(XAZ_TMP)) ALLOCATE(XAZ_TMP(NXY))  ;XAZ_TMP = 0.0
	IF(SERIAL) XAZ_TMP(1:NXY) = XAZ(1:NXY)
# if defined (MULTIPROCESSOR)
        IF(PAR) CALL GATHER(LBOUND(XAZ,1),UBOUND(XAZ,1),M,NXY,1,MYID,NPROCS,  &
                   NMAP,XAZ,XAZ_TMP)
        IF(PAR) CALL MPI_BCAST(XAZ_TMP,NXY,MPI_REAL,0,MPI_COMM_WORLD,IERR)		   
        
# endif
	
        DO IXY=1,NXY
         TOTLD = TOTLD + XAZ_TMP(IXY)*BATM_GL(IXY,ISYS)
        END DO
        IF(MSR) WRITE(OUT,'(/36X,"TOTAL ATMOSPHERIC LOADING =",E13.3," KG/DAY")') TOTLD/1000.

       ELSE

!       TIME-VARIABLE ATMOSPHERIC LOADINGS
        IF(IBNRYRDOPTS(5) == 0) THEN
         IF(NOATM_GL(ISYS) == 1) THEN	 
          READ(36,'(A)')  COMMENT	  
!          READ(36,'(10X,7F10.0)',ERR=936)  BATMC
            READ(36,'(E10.3)',ERR=936)  BATMC         !Tian
    	  
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) == 1.)  BATM_GL(IXY,ISYS)=BATMC	   	   
          ENDDO
	  
         ELSE
          READ(36,'(A)')  COMMENT
         ! READ(36,'(10X,7F10.0)',ERR=936) (BATM_GL(IXY,ISYS),IXY=1,NXY)
          READ(36,'(10X,7F10.0)',ERR=936) (BATM_GL(IXY,ISYS),IXY=1,NOATM_GL(ISYS))	  
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) /= 1.)  BATM_GL(IXY,ISYS)=0.0
          ENDDO
         ENDIF
        ELSE
         IF(NOATM_GL(ISYS) == 1) THEN
          READ(36)  BATMC
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) == 1.) BATM_GL(IXY,ISYS)=BATMC
          ENDDO
         ELSE
          READ(36) (BATM_GL(IXY,ISYS),IXY=1,NXY)
          DO IXY=1,NXY
           IF(FSM_TMP(IXY) /= 1.)  BATM_GL(IXY,ISYS)=0.0
          ENDDO
         ENDIF
        ENDIF
        IF(LIST(3) == 1) THEN
         IF(NOATM_GL(ISYS) == 1) THEN
          IF(MSR) WRITE(OUT,'(40X,"ATMOSPHERIC LOADING AT TIME ",       &
	  F6.1" EQUALS",E10.3)') NXATMT,BATMC
         ELSE
          IF(MSR) WRITE(OUT,'(40X,"ATMOSPHERIC LOADINGS AT TIME ",F6.1/3X,"IY")') NXATMT
          IF(MSR) WRITE(OUT,'(10E11.3/(5X,10E11.3))')  (BATM_GL(IXY,ISYS),IXY=1,NXY)
         ENDIF
        ENDIF
        DO IXY=1,NXY
         BATM_GL(IXY,ISYS) = 1000.*SCALATM(ISYS)*BATM_GL(IXY,ISYS) 
        ENDDO

        TOTLD = 0.0
	IF(.NOT. ALLOCATED(XAZ_TMP)) ALLOCATE(XAZ_TMP(NXY))    ;XAZ_TMP = 0.0
	IF(SERIAL) XAZ_TMP(1:NXY) = XAZ(1:NXY)
# if defined (MULTIPROCESSOR)
        IF(PAR) CALL GATHER(LBOUND(XAZ,1),UBOUND(XAZ,1),M,NXY,1,MYID,NPROCS,  &
                   NMAP,XAZ,XAZ_TMP)
        IF(PAR) CALL MPI_BCAST(XAZ_TMP,NXY,MPI_REAL,0,MPI_COMM_WORLD,IERR)		   
        
# endif
        DO IXY=1,NXY
!JQI         TOTLD = TOTLD + XAZ(IXY)*BATM_GL(IXY,ISYS)
         TOTLD = TOTLD + XAZ_TMP(IXY)*BATM_GL(IXY,ISYS)
        END DO
        IF(MSR) WRITE(OUT,'(/36X,"TOTAL ATMOSPHERIC LOADING AT TIME,",   &
	   F7.3," =",E13.3," KG/DAY")')  TIME,TOTLD/1000.

       ENDIF

       GO TO 380 

  370  IF(MSR) WRITE(OUT,'(///40X,"NO ATMOSPHERIC LOADINGS FOR SYSTEM",I3)') ISYS 
       IF(MSR) WRITE(OUT,'(41X,11("-"),3X,A8,3X,11("-"))')   SYNAME(ISYS)

  380 CONTINUE

      IF(IATMOPT == 1) RETURN
      IF(INPCHCK == 0) THEN
       IF(IATMOPT == 2) THEN
        IF(IATMPWLOPT == 0) THEN
         IF(IBNRYRDOPTS(5) == 0) THEN
          READ(36,'(10X,I10,6X,A4)',ERR=936)  NXATMTSECS
         ELSE
          READ(36)  NXATMTSECS
         ENDIF
         NXATMTSECS=ISCALATM*NXATMTSECS
         NXATMT=NXATMTSECS/86400.
        ELSE
         CALL RCA10(SATM_GL,BATM_GL,NXY,NOATM_GL,NXATMT,36,IATMPWLOPT,SCALATM)
        ENDIF
       ENDIF

      ELSE

  390  IF(IATMPWLOPT == 0) THEN
        IF(IBNRYRDOPTS(5) == 0) THEN
         READ(36,'(10X,I10,6X,A4)',ERR=936)  NXATMTSECS
        ELSE
         READ(36)   NXATMTSECS
        ENDIF
        NXATMTSECS=ISCALATM*NXATMTSECS
        NXATMT=NXATMTSECS/86400.
       ENDIF
!JQI       CALL RCA10(SATM_GL,BATM_GL,MXWK,NOATM_GL,NXATMT,36,IATMPWLOPT,SCALATM)
       CALL RCA10(SATM_GL,BATM_GL,NXY,NOATM_GL,NXATMT,36,IATMPWLOPT,SCALATM)
#    if defined (MULTIPROCESSOR)
        IF(PAR)CALL MPI_BARRIER(MPI_COMM_WORLD,IERR)
#    endif
       BACKSPACE(36)
       IF(INPCHCK == 1)  GO TO 390
     !  INPCHCK=1 !Tian Temporal

      ENDIF
      
      !DEALLOCATE(FSM_TMP,XAZ_TMP)
      DEALLOCATE(FSM_TMP)
  400 RETURN

  933 IN=33
      GO TO 950
  934 IN=34
      GO TO 950
  935 IN=35
      GO TO 950
  936 IN=36
  950 CALL FMTER
!      CALL EXIT 
      CALL PSTOP('rca05_875 ') 
  943 IN=43
      GO TO 955
  944 IN=44
      GO TO 955
  945 IN=45
  955 IF(MSR) WRITE(OUT,9550)  IN
 9550 FORMAT(///20X,'ERROR READING BINARY FILE NUMBER ',I3)
!      CALL EXIT 
      CALL PSTOP('rca05_884 ') 
  960 IF(MSR) WRITE(OUT,9600)  
 9600 FORMAT(//11X,'ERROR...USER REQUESTING MORE POINT SOURCE LOADS THAN',   &
             ' DIMENSIONED FOR IN -RCACM-'/11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_889 ') 
  962 IF(MSR) WRITE(OUT,9602)  
 9602 FORMAT(//11X,'ERROR...USER REQUESTING MORE NONPOINT SOURCE LOADS ',    &
             'THAN DIMENSIONED FOR IN -RCACM-'/11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_894 ') 
  964 IF(MSR) WRITE(OUT,9604)  
 9604 FORMAT(//11X,'ERROR...USER REQUESTING MORE FALL-LINE LOADS THAN ',     &
             'DIMENSIONED FOR IN -RCACM-'/11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_899 ') 
  965 IF(MSR) WRITE(OUT,9605)  
 9605 FORMAT(//                                                              &
        11X,'ERROR...REQUESTED PS LOAD NOT FOUND IN LOADING TABLE'/          &
        11X,'SYSTEM =',I3,2X,'IWK =',I5,2X,'IPS(IWK) =',I5/                  &
        11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_906 ')
  970 IF(MSR) WRITE(OUT,9700)  
 9700 FORMAT(//                                                             &
        11X,'ERROR...REQUESTED NPS LOAD NOT FOUND IN LOADING TABLE'/        &
        11X,'SYSTEM =',I3,2X,'IWK =',I5,2X,'IPS(IWK) =',I5/                 &
        11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_913 ')
  975 IF(MSR) WRITE(OUT,9705)  
 9705 FORMAT(//                                                             &
        11X,'ERROR...REQUESTED FL LOAD NOT FOUND IN LOADING TABLE'/         &
        11X,'SYSTEM =',I3,2X,'IWK =',I5,2X,'IPS(IWK) =',I5/                 &
        11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_920 ')
  980 IF(MSR) WRITE(OUT,9800)  ISYS,I  
 9800 FORMAT(//11X,'LOADING ERROR IN SYSTEM ',I2/                           &
        11X,'ILLEGAL SEGMENT NUMBER SPECIFIED FOR LOAD NUMBER ',I4/         &
        11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_926 ') 
  990 IF(MSR) WRITE(OUT,9900)  ISYS,I,IXY
 9900 FORMAT(//11X,'LOADING ERROR IN SYSTEM ',I2/                           &
        11X,'LOAD NUMBER ',I4,' BEING PUT INTO A NON-WATER SEGMENT          &
       (IXY =',I5,')'/11X,'RCA TERMINATED'//)
!      CALL EXIT 
      CALL PSTOP('rca05_932 ')
      END SUBROUTINE RCA05

!==================================================      
      SUBROUTINE GLOB2LOC05
      USE ALL_VARS,ONLY : PAR,M,MT,MYID
      USE MOD_RCA
# if defined (MULTIPROCESSOR)
      USE MOD_PAR
# endif
      IMPLICIT NONE
      INTEGER :: I,I1,NCNT
      INTEGER,ALLOCATABLE,DIMENSION(:) :: TEMP1,TEMP2,TEMP3
      REAL,ALLOCATABLE,DIMENSION(:)    :: TEMP4,TEMP5
      REAL,ALLOCATABLE,DIMENSION(:,:)  :: TEMP6,TEMP7
    
# if defined (MULTIPROCESSOR)
       IF(PAR)THEN
        ALLOCATE(TEMP6(NZ,MXWK))    ;TEMP6 = 0.0
        NCNT = 0
        DO I=1,MXWK		
	 I1 =NLID(IPSTABL(2,I))
	 IF(I1 /= 0)THEN
	  NCNT = NCNT + 1
	  TEMP6(1:NZ,NCNT) = ZFRACPS_GL(1:NZ,I)  
	 END IF
	END DO  
        IF(NCNT > 0) ZFRACPS(1:NZ,1:NCNT) = TEMP6(1:NZ,1:NCNT)


        TEMP6 = 0.0
        NCNT = 0
        DO I=1,MXWK
	 I1 =NLID(INPSTABL(2,I))
	 IF(I1 /= 0)THEN
	  NCNT = NCNT + 1
	  TEMP6(1:NZ,NCNT) = ZFRACNPS_GL(1:NZ,I)
	 END IF
	END DO  
        IF(NCNT > 0) ZFRACNPS(1:NZ,1:NCNT) = TEMP6(1:NZ,1:NCNT)

        TEMP6 = 0.0
        NCNT = 0
        DO I=1,MXWK
	 I1 =NLID(IFLTABL(2,I))
	 IF(I1 /= 0)THEN
	  NCNT = NCNT + 1
	  TEMP6(1:NZ,NCNT) = ZFRACFL_GL(1:NZ,I)
	 END IF
	END DO  
        IF(NCNT > 0) ZFRACFL(1:NZ,1:NCNT) = TEMP6(1:NZ,1:NCNT)

        DEALLOCATE(TEMP6)		      
       
        DO ISYS = 1,NOSYS
         ALLOCATE(TEMP1(NOPS_GL(ISYS))); TEMP1 = 0
         ALLOCATE(TEMP2(NOPS_GL(ISYS))); TEMP2 = 0
         ALLOCATE(TEMP3(NOPS_GL(ISYS))); TEMP3 = 0
         ALLOCATE(TEMP4(NOPS_GL(ISYS))); TEMP4 = 0.0
         ALLOCATE(TEMP5(NOPS_GL(ISYS))); TEMP5 = 0.0
         NCNT = 0
         !!SET UP LOCAL POINT SOURCE NODES
         DO I=1,NOPS_GL(ISYS)
          I1 = NLID(IPS_GL(1,I,ISYS))
          IF(I1 /= 0)THEN
           NCNT = NCNT + 1	   
	   
           TEMP1(NCNT) = I1
	   TEMP2(NCNT) = IPS_GL(2,I,ISYS)
	   TEMP3(NCNT) = IPS_GL(3,I,ISYS)
	   TEMP4(NCNT) = BPS_GL(I,ISYS)
	   TEMP5(NCNT) = SPS_GL(I,ISYS)
          END IF
         END DO
	 NOPS(ISYS) = NCNT
         IF(NCNT > 0)THEN
	  IPS(1,1:NCNT,ISYS) = TEMP1(1:NCNT)        
	  IPS(2,1:NCNT,ISYS) = TEMP2(1:NCNT) 
	  IPS(3,1:NCNT,ISYS) = TEMP3(1:NCNT)        
	  BPS(1:NCNT,ISYS)   = TEMP4(1:NCNT) 
	  SPS(1:NCNT,ISYS)   = TEMP5(1:NCNT) 
	 END IF        
         DEALLOCATE(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5)
	 
         ALLOCATE(TEMP1(NONPS_GL(ISYS))); TEMP1 = 0
         ALLOCATE(TEMP2(NONPS_GL(ISYS))); TEMP2 = 0
         ALLOCATE(TEMP3(NONPS_GL(ISYS))); TEMP3 = 0
         ALLOCATE(TEMP4(NONPS_GL(ISYS))); TEMP4 = 0.0
         ALLOCATE(TEMP5(NONPS_GL(ISYS))); TEMP5 = 0.0
         NCNT = 0
         !!SET UP LOCAL NON POINT SOURCE NODES
         DO I=1,NONPS_GL(ISYS)
          I1 = NLID(INPS_GL(1,I,ISYS))
          IF(I1 /= 0)THEN
           NCNT = NCNT + 1
           TEMP1(NCNT) = I1
	   TEMP2(NCNT) = INPS_GL(2,I,ISYS)
	   TEMP3(NCNT) = INPS_GL(3,I,ISYS)
	   TEMP4(NCNT) = BNPS_GL(I,ISYS)
	   TEMP5(NCNT) = SNPS_GL(I,ISYS)
          END IF
         END DO
	 NONPS(ISYS) = NCNT
         IF(NCNT > 0)THEN
	  INPS(1,1:NCNT,ISYS) = TEMP1(1:NCNT)        
	  INPS(2,1:NCNT,ISYS) = TEMP2(1:NCNT) 
	  INPS(3,1:NCNT,ISYS) = TEMP3(1:NCNT)        
	  BNPS(1:NCNT,ISYS)   = TEMP4(1:NCNT) 
	  SNPS(1:NCNT,ISYS)   = TEMP5(1:NCNT) 
	 END IF        
         DEALLOCATE(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5)

         ALLOCATE(TEMP1(NOFL_GL(ISYS))); TEMP1 = 0
         ALLOCATE(TEMP2(NOFL_GL(ISYS))); TEMP2 = 0
         ALLOCATE(TEMP3(NOFL_GL(ISYS))); TEMP3 = 0
         ALLOCATE(TEMP4(NOFL_GL(ISYS))); TEMP4 = 0.0
         ALLOCATE(TEMP5(NOFL_GL(ISYS))); TEMP5 = 0.0
         NCNT = 0
         !!SET UP LOCAL FALL-LINE NODES
         DO I=1,NOFL_GL(ISYS)
          I1 = NLID(IFL_GL(1,I,ISYS))
          IF(I1 /= 0)THEN
           NCNT = NCNT + 1
           TEMP1(NCNT) = I1
	   TEMP2(NCNT) = IFL_GL(2,I,ISYS)
	   TEMP3(NCNT) = IFL_GL(3,I,ISYS)
	   TEMP4(NCNT) = BFL_GL(I,ISYS)
	   TEMP5(NCNT) = SFL_GL(I,ISYS)
          END IF
         END DO
	 NOFL(ISYS) = NCNT
         IF(NCNT > 0)THEN
	  IFL(1,1:NCNT,ISYS) = TEMP1(1:NCNT)        
	  IFL(2,1:NCNT,ISYS) = TEMP2(1:NCNT) 
	  IFL(3,1:NCNT,ISYS) = TEMP3(1:NCNT)        
	  BFL(1:NCNT,ISYS)   = TEMP4(1:NCNT) 
	  SFL(1:NCNT,ISYS)   = TEMP5(1:NCNT) 
	 END IF        
         DEALLOCATE(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5)
	END DO 
	 
        ALLOCATE(TEMP6(MT,NOSYS)); TEMP6 = 0.0
        ALLOCATE(TEMP7(MT,NOSYS)); TEMP7 = 0.0
        DO ISYS = 1,NOSYS
         DO IXY=1,M
          TEMP6(IXY,ISYS) = BATM_GL(NGID(IXY),ISYS) 
          TEMP7(IXY,ISYS) = SATM_GL(NGID(IXY),ISYS) 
	 END DO
	 DO IXY=1,NHN
	  TEMP6(IXY+M,ISYS) = BATM_GL(HN_LST(IXY),ISYS)
	  TEMP7(IXY+M,ISYS) = SATM_GL(HN_LST(IXY),ISYS)
         END DO
	END DO 

        ALLOCATE(BATM(MT,NOSYS))  ;BATM = 0.0
        ALLOCATE(SATM(MT,NOSYS)) ; SATM = 0.0
	
        BATM(1:MT,:) =  TEMP6(1:MT,:)
	SATM(1:MT,:) =  TEMP7(1:MT,:)

	DEALLOCATE(TEMP6,TEMP7)
       END IF 
# endif
      RETURN
      END SUBROUTINE GLOB2LOC05
      
