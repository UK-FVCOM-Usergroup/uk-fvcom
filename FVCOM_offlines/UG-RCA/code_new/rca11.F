      SUBROUTINE RCA11
! 
!     RCA11 UPDATES THE BOUNDARY CONCENTRATIONS 
! 
      USE ALL_VARS      !, ONLY : MSR,ZZ,CARAY,CDARAY,SERIAL,PAR,M,MYID,HG
      USE MOD_RCA
# if defined (MULTIPROCESSOR)
      USE MOD_PAR
# endif
      IMPLICIT NONE
      SAVE
!      INCLUDE  'RCACM'
      REAL  SLBC(NSL),SIGDEPTH(NXY,NZ),SIGBC(NZ)
      REAL OLDBCT
      INTEGER I,J,NBCRD,JBC
      REAL,ALLOCATABLE :: ZZ_TMP(:,:),HBAR_TMP(:),TEMP3(:),TEMP4(:)
      INTEGER :: NCNT,I1,IERR
 
      IF(BCFILNA == 'NULL')  GO TO 930
      IF(IBCPWLOPT == 1) THEN
        OLDBCT = NXBCT
        IF(IBNRYRDOPTS(1) == 0) THEN
          READ(32,'(10X,I10)',ERR=950,END=960)  NXBCTSECS
	  
        ELSE
          READ(32,ERR=950,END=960)  NXBCTSECS
        ENDIF
        NXBCTSECS = ISCALBC*NXBCTSECS
        NXBCT=NXBCTSECS/86400.
      ENDIF

      IF(IBCPWLOPT == 0) THEN
        IF(MSR) WRITE(OUT,1000) NXBCT
 1000   FORMAT(//40X,'BOUNDARY CONDITIONS AT TIME =',F8.2,' DAYS')
      ELSE
        IF(INITB /= 0 .AND. MSR) WRITE(OUT,1000) OLDBCT
      ENDIF
      IF(IBCPWLOPT /= 0) THEN
       DO ISYS=1,NOSYS
        IF(NOBC_GL(ISYS) /= 0) THEN
         DO I=1,NOBC_GL(ISYS)
          SBC_GL(I,ISYS) = BBC_GL(I,ISYS)
	 END DO
	END IF  
       END DO
      END IF 

      DO 200 ISYS=1,NOSYS 

       IF(NOBC_GL(ISYS) /= 0) THEN
        IF(INITB/= 0) THEN
         IF(MSR) WRITE(OUT,1200) ISYS
 1200    FORMAT(41X,'BOUNDARY CONCENTRATIONS FOR SYSTEM',I3) 
         IF(MSR) WRITE(OUT,1250)   SYNAME(ISYS)
 1250    FORMAT(41X,11('-'),3X,A8,3X,12('-')) 
        ENDIF
	
       ! IF(IBCOPT == 4) THEN
        IF(IBCOPT == 2) THEN

!        SIGMA-LEVELS
         IF(LIST(2) == 1 .AND. MSR) WRITE(OUT,2000)
 2000    FORMAT(4(6X,'NODE LYR',6X,'CONC',3X))

         IF(IBNRYRDOPTS(1) == 0) THEN
!          READ(32,2100,ERR=950,END=960)  (BBC(I,ISYS),I=1,NOBC_GL(ISYS))
          READ(32,'(10X,10F10.0)',ERR=950,END=960)  (BBC_GL(I,ISYS),I=1,NOBC_GL(ISYS))  !Tian	  

         ELSE
          READ(32,ERR=950,END=960)  (BBC_GL(I,ISYS),I=1,NOBC_GL(ISYS))
         ENDIF
 2100    FORMAT(10X,7F10.0) 
         IF(IBCPWLOPT == 0) THEN
          IF(LIST(2) == 1 .AND. MSR)                             &
            WRITE(OUT,2200)  ((IBC_GL(J,I,ISYS),J=1,2),BBC_GL(I,ISYS),I=1,NOBC_GL(ISYS))
 2200     FORMAT(4(5X,2I4,E13.3))
         ELSE
          IF(INITB /= 0 .AND. LIST(2) == 1)THEN
	   IF(SERIAL) WRITE(OUT,2200) ((IBC_GL(J,I,ISYS),J=1,2),SBC_GL(I,ISYS),I=1,NOBC_GL(ISYS))
          END IF
         ENDIF

         DO I=1,NOBC_GL(ISYS)
          BBC_GL(I,ISYS) = SCALBC(ISYS)*BBC_GL(I,ISYS) 
	 END DO 

        ELSE   ! GO TO 190

!     STANDARD LEVELS

         NBCRD = NOBC_GL(ISYS)/NZ		 
         JBC = 0
         DO I=1,NBCRD
       !   IXY = IBC_GL(1,NZ*(I-1)+1,ISYS)
	  IXY = IBCS_GL(I)
          IF(IBNRYRDOPTS(1) == 0) THEN
           READ(32,'(10X,10F10.0)',ERR=950,END=960) (SLBC(J),J=1,NOBCSL_GL(I,ISYS))
	   	    
          ELSE
           READ(32,ERR=950,END=960)  (SLBC(J),J=1,NOBCSL(I,ISYS))
	   
          ENDIF

        ALLOCATE(ZZ_TMP(NXY,NZ))    ;ZZ_TMP = 0.0
        ALLOCATE(HBAR_TMP(NXY))  ;HBAR_TMP = 0.0
	IF(SERIAL)THEN
	  ZZ_TMP = ZZ
	  HBAR_TMP = HBAR
	END IF  

# if defined (MULTIPROCESSOR)      
	IF(PAR)CALL GATHER(LBOUND(ZZ,1),UBOUND(ZZ,1),M,NXY,NZ,MYID,NPROCS,NMAP,ZZ,ZZ_TMP)
	IF(PAR)CALL GATHER(LBOUND(HBAR,1),UBOUND(HBAR,1),M,NXY,1,MYID,NPROCS,NMAP,HBAR,HBAR_TMP)
        IF(PAR) CALL MPI_BCAST(HBAR_TMP,NXY,MPI_REAL,0,MPI_COMM_WORLD,IERR)
	IF(PAR) CALL MPI_BCAST(ZZ_TMP,NXY*NZ,MPI_REAL,0,MPI_COMM_WORLD,IERR)	
# endif	

          DO IZ=1,NZ
          ! SIGDEPTH(IXY,IZ) = -ZZ_TMP(IXY,IZ)*HBAR_TMP(IXY)
	   SIGDEPTH(IXY,IZ) = ZZ_TMP(IXY,IZ)*HBAR_TMP(IXY)          
	  END DO  
         ! CALL SINTER(SLDEPTH(1,ISYS),SLBC,SIGDEPTH(IXY,:),SIGBC,NOBCSL_GL(I,ISYS),NZ)
	CALL SINTER(SLDEPTH(:,ISYS),SLBC(1:NOBCSL_GL(I,ISYS)),SIGDEPTH(IXY,:),SIGBC,NOBCSL_GL(I,ISYS),NZ)    !Tian	  

        DEALLOCATE(ZZ_TMP,HBAR_TMP)

          DO IZ=1,NZ
           JBC = JBC + 1
           BBC_GL(JBC,ISYS) = SCALBC(ISYS)*SIGBC(IZ)
	  END DO  
         END DO	

         IF(IBCPWLOPT == 0) THEN
          IF(LIST(2) == 1)  THEN
           IF(MSR) WRITE(OUT,3300) 
 3300      FORMAT(//31X,                                                   &
            'BOUNDARY CONCENTRATIONS AFTER SIGMA-LEVEL TRANSFORMATION'/)
           IF(MSR) WRITE(OUT,1700) 
 1700      FORMAT(12X,4(8X,'BC  ROW COL LYR ')) 
           IF(MSR) WRITE(OUT,1900)  (BBC_GL(I,ISYS),(IBC_GL(J,I,ISYS),J=1,3),    &
                                     I=1,NOBC_GL(ISYS))
 1900      FORMAT(11X,E12.4,3I4,E12.4,3I4,E12.4,3I4,E12.4,3I4)
          ENDIF
         ELSE
          IF(INITB /= 0 .AND. LIST(2) == 1) THEN
           IF(MSR) WRITE(OUT,3300) 
           IF(MSR) WRITE(OUT,1700) 
           IF(MSR .AND. SERIAL) WRITE(OUT,1900)  (SBC(I,ISYS),(IBC(J,I,ISYS),J=1,2),    &
                                     I=1,NOBC(ISYS))
          ENDIF
         ENDIF
	END IF 

        IF(LIST(2) == 1 .AND. MSR) WRITE(OUT,'(//)')
       END IF

       IF(SERIAL)THEN
	 BBC = BBC_GL
	 SBC = SBC_GL
       END IF
     
# if defined (MULTIPROCESSOR)
       IF(PAR)THEN
	 ALLOCATE(TEMP3(NOBC_GL(ISYS)*NZ))   ;TEMP3 = 0.0
	 ALLOCATE(TEMP4(NOBC_GL(ISYS)*NZ))   ;TEMP4 = 0.0
	 
	 NCNT = 0
	 JBC = 0
	 !!SET UP LOCAL OPEN BOUNDARY NODES
	 DO I=1,NOBC_GL(ISYS)/NZ
	  DO IZ = 1,NZ
	   JBC = JBC+1
           IF(JBC > MXBC)  GO TO 960
	   I1 = NLID(IBC_GL(1,JBC,ISYS))
	   IF(I1 /= 0)THEN
	    NCNT = NCNT +1
	    TEMP3(NCNT) = BBC_GL(JBC,ISYS)
	    TEMP4(NCNT) = SBC_GL(JBC,ISYS)
	   END IF
	  END DO  
	 END DO
	 IF(NCNT > 0)THEN
	  BBC(1:NCNT,ISYS)   = TEMP3(1:NCNT)
	  SBC(1:NCNT,ISYS)   = TEMP4(1:NCNT)
	 END IF  
	 DEALLOCATE(TEMP3,TEMP4) 
       END IF 
# endif

  200 CONTINUE

      IF(INPCHCK == 1) RETURN

      IF(IBCPWLOPT /= 0) THEN

!      CALCULATE SLOPES FOR PIECEWISE LINEAR BC OPTION
       DO ISYS=1,NOSYS
        IF(NOBC(ISYS) /= 0) THEN
         DO I=1,NOBC(ISYS)
          SBC(I,ISYS) = (SBC(I,ISYS)-BBC(I,ISYS))/(OLDBCT-NXBCT)
	 END DO  
	END IF 
       END DO	
       OLDBCT = NXBCT
       
      END IF
      
!     MOVE BOUNDARY CONDITIONS TO -CARAY-
      DO ISYS=1,NOSYS
       IF(NOBC(ISYS) /= 0) THEN
        DO I=1,NOBC(ISYS)
         IF(IBCPWLOPT == 0) THEN
          CARAY(IBC(1,I,ISYS),IBC(2,I,ISYS),ISYS)=BBC(I,ISYS)
         ELSE
          CARAY(IBC(1,I,ISYS),IBC(2,I,ISYS),ISYS)=                    &
                             (TIME-NXBCT)*SBC(I,ISYS) + BBC(I,ISYS)
         ENDIF
        END DO	
       END IF
      END DO 

      IF(IBCPWLOPT == 0) THEN
        IF(IBNRYRDOPTS(1) == 0) THEN
          READ(32,'(10X,I10)',ERR=950,END=960)  NXBCTSECS
print*,'rca11 217 ',MYID,NXBCTSECS  
        ELSE
          READ(32,ERR=950,END=960)  NXBCTSECS
        ENDIF
        NXBCTSECS = ISCALBC*NXBCTSECS
        NXBCT=NXBCTSECS/86400.
      ENDIF

  930 RETURN

  950 IN=32
      BACKSPACE(32)
      CALL FMTER
!JQI      CALL EXIT 
      CALL PSTOP
  960 IF(MSR) WRITE(OUT,9600)
 9600 FORMAT(//5X,'END OF FILE ENCOUNTERED WHILE READING BOUNDARY CONDITION FILE')
      !INPCHCK=2
      RETURN
      END SUBROUTINE RCA11
