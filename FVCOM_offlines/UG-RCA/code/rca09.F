      SUBROUTINE RCA09
! 
!     RCA09 IS AN OUTPUT ROUTINE FOR INTERMEDIATE DUMPS
! 
      USE ALL_VARS, ONLY : MSR,CARAY,CDARAY,SERIAL,PAR,MT,M,MYID,NPROCS
      USE MOD_RCA
# if defined (MULTIPROCESSOR) 
      USE MOD_PAR
# endif           
      IMPLICIT NONE
      SAVE
!      INCLUDE 'RCACM' 

      REAL  TOTLOADS(4)
      INTEGER I,J,I1,I2,I3,I4,I5,I6,K1,K2,K3,K4,K5,K6,ILOAD
      REAL PT,DELTPS,DELTNPS,DELTFL,DELTATM
     ! REAL,ALLOCATABLE,DIMENSION(:) :: FSM_TMP,SATM_TMP,BATM_TMP,XAZ_TMP,TEMP
      REAL,ALLOCATABLE,DIMENSION(:) :: FSM_TMP,SATM_TMP,BATM_TMP,TEMP      
      REAL,ALLOCATABLE :: CARAY_TMP(:,:),CARAY_TMP1(:,:)
!JQI      EQUIVALENCE
!JQI     .      (IDUMP(1,1),I1) , (IDUMP(1,2),K1) 
!JQI     .   ,  (IDUMP(2,1),I2) , (IDUMP(2,2),K2) 
!JQI     .   ,  (IDUMP(3,1),I3) , (IDUMP(3,2),K3) 
!JQI     .   ,  (IDUMP(4,1),I4) , (IDUMP(4,2),K4) 
!JQI     .   ,  (IDUMP(5,1),I5) , (IDUMP(5,2),K5) 
!JQI     .   ,  (IDUMP(6,1),I6) , (IDUMP(6,2),K6) 

!        INCREMENT OUTPUT RECORD NUMBER 

      PT = ITIMESECS/86400.
      IREC=IREC+1 

      IF(MSR)THEN
       IF(IREC == 1) THEN
        WRITE(OUT,2000)  PT,((IDUMP(I,J),J=1,2),I=1,6)
 2000   FORMAT('1'//6X,'TIME =',F10.4,' DAYS',5X,'<--  SEGMENTS  -->'      &
           /1X,'SYSTEM',8X,6(I5,',',I3)/) 
       ELSE
        IF(NOSYS > 20) WRITE(OUT,2001)  PT
 2001   FORMAT('1'//6X,'TIME =',F10.4,' DAYS')
        IF(NOSYS <= 20) WRITE(OUT,2002)  PT
 2002   FORMAT(//6X,'TIME =',F10.4,' DAYS')
       ENDIF
      END IF 

      DO ISYS=1,NOSYS
        I1 = IDUMP(1,1)     ;I2 = IDUMP(2,1) 
        I3 = IDUMP(3,1)     ;I4 = IDUMP(4,1) 
        I5 = IDUMP(5,1)     ;I6 = IDUMP(6,1) 
        K1 = IDUMP(1,2)     ;K2 = IDUMP(2,2) 
        K3 = IDUMP(3,2)     ;K4 = IDUMP(4,2) 
        K5 = IDUMP(5,2)     ;K6 = IDUMP(6,2) 
       IF(SERIAL) WRITE(OUT,1000) ISYS,SYNAME(ISYS),CARAY(I1,K1,ISYS),       &
             CARAY(I2,K2,ISYS),CARAY(I3,K3,ISYS),CARAY(I4,K4,ISYS),       &
             CARAY(I5,K5,ISYS),CARAY(I6,K6,ISYS)
#  if defined (MULTIPROCESSOR)
        IF(PAR)THEN
	 ALLOCATE(CARAY_TMP(NXY,NZ))   ;CARAY_TMP = 0.0
	 ALLOCATE(CARAY_TMP1(0:MT,NZ)) ;CARAY_TMP1= 0.0
	 CARAY_TMP1(:,:) = CARAY(:,:,ISYS)
         CALL GATHER(LBOUND(CARAY_TMP1,1),UBOUND(CARAY_TMP1,1),M,NXY,NZ,MYID,NPROCS,  &
                   NMAP,CARAY_TMP1,CARAY_TMP)
         IF(MSR) WRITE(OUT,1000) ISYS,SYNAME(ISYS),CARAY_TMP(I1,K1),      &
             CARAY_TMP(I2,K2),CARAY_TMP(I3,K3),CARAY_TMP(I4,K4),       &
             CARAY_TMP(I5,K5),CARAY_TMP(I6,K6)
	 DEALLOCATE(CARAY_TMP,CARAY_TMP1)    
	END IF 
#  endif
      END DO
 1000 FORMAT(1X,I3,1X,A8,1X,6E12.4) 
 
      IF(SERIAL) WRITE(OUT,3000)  PT
      IF (PAR) THEN
      IF(MSR) WRITE(OUT,3000)  PT
      END IF
      
 3000 FORMAT(//10X,'LOADING RATES (KG/DAY) BY SYSTEM FOR TIME =',         &
        F10.4,' DAYS'/19X,'POINT     NONPOINT'/5X,                        &
        'SYSTEM       SOURCE       SOURCE    FALL-LINE  ATMOSPHERIC')

      TOTLOADS = 0.
      	
      DO 200 ISYS=1,NOSYS

       DO ILOAD=1,4
        TOTLOADS(ILOAD)=0.0
       END DO
       IF(NOPS(ISYS) > 0) THEN
        DELTPS = TIME - NXPST
        DO I=1,NOPS(ISYS) 
         TOTLOADS(1) = TOTLOADS(1) + DELTPS*SPS(I,ISYS) + BPS(I,ISYS)
	END DO 
       ENDIF
       IF(NONPS(ISYS) > 0) THEN
        DELTNPS = TIME - NXNPST
        DO I=1,NONPS(ISYS)
         TOTLOADS(2) = TOTLOADS(2) + DELTNPS*SNPS(I,ISYS) + BNPS(I,ISYS)
	END DO 
       ENDIF
       IF(NOFL(ISYS) > 0) THEN
        DELTFL = TIME - NXFLT
        DO I=1,NOFL(ISYS)
         TOTLOADS(3) = TOTLOADS(3) + DELTFL*SFL(I,ISYS) + BFL(I,ISYS)
	END DO  
       ENDIF
    
       IF(NOATM(ISYS) > 0) THEN
        DELTATM = TIME - NXATMT
	IF(SERIAL)THEN
         DO IXY=1,MT
          IF(FSM(IXY) > 0.) THEN
           TOTLOADS(4) = TOTLOADS(4) + (DELTATM*SATM(IXY,ISYS)        &
                       + BATM(IXY,ISYS))*XAZ(IXY)
          END IF
         END DO
	END IF

#  if defined (MULTIPROCESSOR)
        IF(PAR)THEN
	 ALLOCATE(FSM_TMP(NXY))   ;FSM_TMP  = 0.0
	 ALLOCATE(SATM_TMP(NXY))  ;SATM_TMP = 0.0
	 ALLOCATE(BATM_TMP(NXY))  ;BATM_TMP = 0.0
!	 ALLOCATE(XAZ_TMP(NXY))   ;XAZ_TMP  = 0.0

         CALL GATHER(LBOUND(FSM,1),UBOUND(FSM,1),M,NXY,1,     &
	           MYID,NPROCS,NMAP,FSM,FSM_TMP)
       !  ALLOCATE(TEMP(0:MT))     ;TEMP = 0.0
         ALLOCATE(TEMP(1:MT))     ;TEMP = 0.0	 
	 TEMP(1:MT) = SATM(1:MT,ISYS)
	   
         CALL GATHER(LBOUND(TEMP,1),UBOUND(TEMP,1),M,NXY,1,     &
	           MYID,NPROCS,NMAP,TEMP,SATM_TMP)

	 TEMP(1:MT) = BATM(1:MT,ISYS)
         CALL GATHER(LBOUND(TEMP,1),UBOUND(TEMP,1),M,NXY,1,     &
	           MYID,NPROCS,NMAP,TEMP,BATM_TMP)
         DEALLOCATE(TEMP)
	 		   
         CALL GATHER(LBOUND(XAZ,1),UBOUND(XAZ,1),M,NXY,1,     &
	           MYID,NPROCS,NMAP,XAZ,XAZ_TMP)

         DO IXY=1,NXY
          IF(FSM_TMP(IXY) > 0.) THEN
           TOTLOADS(4) = TOTLOADS(4) + (DELTATM*SATM_TMP(IXY)        &
                       + BATM_TMP(IXY))*XAZ_TMP(IXY)		       
          END IF
         END DO
	 !DEALLOCATE(FSM_TMP,SATM_TMP,BATM_TMP,XAZ_TMP)
	 DEALLOCATE(FSM_TMP,SATM_TMP,BATM_TMP)	 
	END IF 
#  endif
       ENDIF  !NOATM
       
       IF(TOTLOADS(1) == 0.0 .AND. TOTLOADS(2) == 0.0 .AND.               &
          TOTLOADS(3) == 0.0 .AND. TOTLOADS(4) == 0.0) GO TO 200

       IF(SERIAL) WRITE(OUT,3100)  ISYS,(TOTLOADS(ILOAD)/1000.,ILOAD=1,4)
       IF(PAR) THEN 
          IF(MSR) WRITE(OUT,3100)  ISYS,(TOTLOADS(ILOAD)/1000.,ILOAD=1,4)
       END IF
 3100  FORMAT(8X,I3,4E13.4)
  200 CONTINUE

      REWIND(15)
      IF(SERIAL) WRITE(15)   CARAY

#  if defined (MULTIPROCESSOR)
      DO ISYS=1,NOSYS
         ALLOCATE(CARAY_TMP1(0:MT,NZ)) ;CARAY_TMP1= 0.0
         CARAY_TMP1(:,:) = CARAY(:,:,ISYS)
      IF(PAR) CALL PWRITE(15,MYID,NPROCS,CARAY_TMP1,LBOUND(CARAY_TMP1,1),       &
              UBOUND(CARAY_TMP1,1),M,NXY,NZ,NMAP,1,"CARAY_TMP1")
         DEALLOCATE(CARAY_TMP1)
      END DO

!      IF(PAR) CALL PWRITE(15,MYID,NPROCS,CARAY,LBOUND(CARAY,1),       &
!              UBOUND(CARAY,1),M,NXY,NZ,NMAP,1,"CARAY")
#  endif

      RETURN
      END SUBROUTINE RCA09
