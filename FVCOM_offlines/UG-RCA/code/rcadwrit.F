      SUBROUTINE  RCAWBUF(ISYSTM,A1,A2,A3,A4,A5)
!
!        RCAWBUF/RCAWRIT IS USED TO WRITE RCA DUMPS TO DISK
!                        IT REDUCES DISK I/O BY PROVIDING AN INTERNAL
!                        BUFFER TO HOLD INTERMEDIATE VALUES
      USE ALL_VARS, ONLY : MSR,MYID
      USE MOD_RCA
      IMPLICIT NONE
      SAVE
!      INCLUDE  'RCACM'

      REAL  BUF1(1000),BUF2(3000),BUF3(5000),BUF4(7000),BUF5(9000),        &
         BUF6(11000),BUF7(15000),BUF8(20000),BUF9(30000),BUFFER(50000)

      EQUIVALENCE                                                          &
         (BUFFER(1),BUF1(1)) , (BUFFER(1),BUF2(1)) , (BUFFER(1),BUF3(1))   &
       , (BUFFER(1),BUF4(1)) , (BUFFER(1),BUF5(1)) , (BUFFER(1),BUF6(1))   &
       , (BUFFER(1),BUF7(1)) , (BUFFER(1),BUF8(1)) , (BUFFER(1),BUF9(1))
!
      INTEGER :: IB,OUT12,OUT13
      REAL :: A1,A2,A3,A4,A5,RECSIZ
      INTEGER :: INITBUF,ICNT,ISYSTM
      DATA  INITBUF/0/,ICNT/0/
      IF(INITBUF == 0) THEN
       DO IB=1,50000
        BUFFER(IB)=0.0
       ENDDO
       INITBUF=1
      ENDIF

      BUFFER(ICNT+1) = A1
      BUFFER(ICNT+2) = A2
      BUFFER(ICNT+3) = A3
      BUFFER(ICNT+4) = A4
      BUFFER(ICNT+5) = A5
      ICNT = ICNT + 5
      IF(ICNT > 50000) THEN
         WRITE(OUT,1200) ICNT
 1200    FORMAT(//10X,'RCADWRIT ERROR...'/                               &
             10X,'MAXIMUM BUFFER SIZE OF 50,000 EXCEEDED'/               &
             10X,'(PRODUCT OF NDMPS*NOSYS*5 CANNOT EXCEED 50,000)'/      &
             10X,'RCA PROGRAM TERMINATED'//)
       CALL EXIT
      ENDIF
      RETURN

      ENTRY RCAWRIT

!     BUFFER IS COMPLETE - DUMP TO DISK

# if defined (MULTIPROCESSOR)
   !   OUT12 = MYID*100+12
   !   OUT13 = MYID*100+13

      IF(IDDOPT == 0) THEN
     !  WRITE(OUT12) TIME  !Tian Temporal
      ELSE
     !  IF(INITB == 0) WRITE(OUT12) TIME  !Tian Temporal
     !  IF(INITB >= 1) WRITE(OUT12) TIME-(FLOAT(IPRNTDSECS)/86400.)/2. !Tian Temporal
      ENDIF
     ! IF(ICNT <= 1000)   WRITE(OUT13) BUF1
     ! IF(ICNT > 1000 .AND. ICNT <= 3000)   WRITE(OUT13) BUF2
     ! IF(ICNT > 3000 .AND. ICNT <= 5000)   WRITE(OUT13) BUF3
     ! IF(ICNT > 5000 .AND. ICNT <= 7000)   WRITE(OUT13) BUF4
     ! IF(ICNT > 7000 .AND. ICNT <= 9000)   WRITE(OUT13) BUF5
     ! IF(ICNT > 9000 .AND. ICNT <= 11000)  WRITE(OUT13) BUF6
     ! IF(ICNT > 11000 .AND. ICNT <= 15000) WRITE(OUT13) BUF7
     ! IF(ICNT > 15000 .AND. ICNT <= 20000) WRITE(OUT13) BUF8
     ! IF(ICNT > 20000 .AND. ICNT <= 30000) WRITE(OUT13) BUF9
     ! IF(ICNT > 30000)   WRITE(OUT13) BUFFER
# else
      IF(IDDOPT == 0) THEN
      ! WRITE(12) TIME
      ELSE
      ! IF(INITB == 0) WRITE(12) TIME
      ! IF(INITB >= 1) WRITE(12) TIME-(FLOAT(IPRNTDSECS)/86400.)/2.
      ENDIF
     ! IF(ICNT <= 1000)   WRITE(13) BUF1
     ! IF(ICNT > 1000 .AND. ICNT <= 3000)   WRITE(13) BUF2
     ! IF(ICNT > 3000 .AND. ICNT <= 5000)   WRITE(13) BUF3
     ! IF(ICNT > 5000 .AND. ICNT <= 7000)   WRITE(13) BUF4
     ! IF(ICNT > 7000 .AND. ICNT <= 9000)   WRITE(13) BUF5
     ! IF(ICNT > 9000 .AND. ICNT <= 11000)  WRITE(13) BUF6
     ! IF(ICNT > 11000 .AND. ICNT <= 15000) WRITE(13) BUF7
     ! IF(ICNT > 15000 .AND. ICNT <= 20000) WRITE(13) BUF8
     ! IF(ICNT > 20000 .AND. ICNT <= 30000) WRITE(13) BUF9
     ! IF(ICNT > 30000)   WRITE(13) BUFFER
# endif

!        RESET ICNT
      RECSIZ = ICNT
      ICNT = 0
       
      RETURN
      END SUBROUTINE  RCAWBUF
